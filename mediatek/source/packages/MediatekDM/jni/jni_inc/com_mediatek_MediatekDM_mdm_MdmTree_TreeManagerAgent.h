/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein is
 * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
 * the prior written permission of MediaTek inc. and/or its licensors, any
 * reproduction, modification, use or disclosure of MediaTek Software, and
 * information contained herein, in whole or in part, shall be strictly
 * prohibited.
 * 
 * MediaTek Inc. (C) 2010. All rights reserved.
 * 
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
 * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
 * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
 * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
 * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
 * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
 * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
 * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
 * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
 * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
 * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
 * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek
 * Software") have been modified by MediaTek Inc. All revisions are subject to
 * any receiver's applicable license agreements with MediaTek Inc.
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent */

#ifndef _Included_com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
#define _Included_com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    initialize
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_initialize
  (JNIEnv *, jobject);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    destroy
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_destroy
  (JNIEnv *, jobject);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    addInterior
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_addInterior
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    addLeaf
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_addLeaf
  (JNIEnv *, jobject, jstring, jstring, jstring, jbyteArray);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    deleteNode
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_deleteNode
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    getProperty
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_getProperty
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    replaceProperty
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_replaceProperty
  (JNIEnv *, jobject, jstring, jstring, jstring);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    getBinValue
 * Signature: (Ljava/lang/String;[B)I
 */
JNIEXPORT jint JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_getBinValue
  (JNIEnv *, jobject, jstring, jbyteArray);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    getBoolValue
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_getBoolValue
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    getIntValue
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_getIntValue
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    getStringValue
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_getStringValue
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    replaceBinValue
 * Signature: (Ljava/lang/String;[B)V
 */
JNIEXPORT void JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_replaceBinValue
  (JNIEnv *, jobject, jstring, jbyteArray);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    replaceBoolValue
 * Signature: (Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_replaceBoolValue
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    replaceIntValue
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_replaceIntValue
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    replaceStringValue
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_replaceStringValue
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    registerNodeIoHandler
 * Signature: (Ljava/lang/String;Lcom/mediatek/MediatekDM/mdm/NodeIoHandler;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_registerNodeIoHandler
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    unregisterNodeIoHandler
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_unregisterNodeIoHandler
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    registerNodeExecHandler
 * Signature: (Ljava/lang/String;Lcom/mediatek/MediatekDM/mdm/NodeExecuteHandler;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_registerNodeExecHandler
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    unregisterNodeExecHandler
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_unregisterNodeExecHandler
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    execNode
 * Signature: (Ljava/lang/String;[B)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_execNode
  (JNIEnv *, jobject, jstring, jbyteArray);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    readTree
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_readTree
  (JNIEnv *, jobject);

/*
 * Class:     com_mediatek_MediatekDM_mdm_MdmTree_TreeManagerAgent
 * Method:    writeTree
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_MediatekDM_mdm_MdmTree_00024TreeManagerAgent_writeTree
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
