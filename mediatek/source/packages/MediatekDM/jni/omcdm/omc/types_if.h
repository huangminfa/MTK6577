/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein is
 * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
 * the prior written permission of MediaTek inc. and/or its licensors, any
 * reproduction, modification, use or disclosure of MediaTek Software, and
 * information contained herein, in whole or in part, shall be strictly
 * prohibited.
 * 
 * MediaTek Inc. (C) 2010. All rights reserved.
 * 
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
 * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
 * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
 * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
 * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
 * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
 * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
 * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
 * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
 * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
 * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
 * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek
 * Software") have been modified by MediaTek Inc. All revisions are subject to
 * any receiver's applicable license agreements with MediaTek Inc.
 */

/*[
 *		Name:					types_if.h
 *
 *		Project:				OMC
 *
 *		Created On:				August 2005
 *
 *		Derived From:			Original
 *
 *		Version:				$Id: //depot/main/base/omc/types_if.h#7 $
 *
 *		Coding Standards:		3.0
 *
 *		(c) Copyright Insignia Solutions plc, 2005 - 2006
]*/

/*! \file
 *		Defines OMC external types that need to be generally available.
 *
 * \brief	OMC types
 */

#ifndef _OMC_TYPES_IF_H_
#define _OMC_TYPES_IF_H_

#ifdef __cplusplus
extern "C" {
#endif


/*!
 * The session is identified to the porting APIs by a user data pointer
 * supplied to TRG_OMC_initSession(). This is an opaque pointer to OMC;
 * it simply stores it and passes it to the API functions when necessary.
 */
typedef struct OMC_UserData_s *OMC_UserDataPtr;

/*!
 * The session is identified to OMC by a session data pointer generated
 * by TRG_OMC_initSession(). This is an opaque pointer to the porting
 * code; it should simply store it and pass it to the API functions
 * when necessary.
 */
typedef struct OMC_SessionData_s *OMC_SessionDataPtr;

/*!
 * The session is identified to TMAN/TREE by a session data pointer
 * generated by TMAN_initSession(). This is an opaque pointer to the OMC;
 * it simply stores it and passes it to the TMAN functions when necessary.
 */
typedef struct OMC_TreeSession_s *OMC_TreeSessionPtr;


/*!
 * The type for error codes used throughout OMC. Most functions
 * return an error code of this type to indicate their success
 * or failure. This type is defined to match the SyncML RTK type
 * \ref Ret_t. The error code values are defined in omc_error.h.
 */
typedef IS32 OMC_Error;

/*!
 * Errors not including the group of time slicing (yield or wait)
 * error codes belong to the set \ref OMC_Error. Errors including
 * the time slicing error codes belong to the set OMC_Yield.
 *
 * This distinction is particularly useful for the return type of
 * API functions. If the function is defined to return OMC_Error
 * then the function cannot return a time slicing error code. If
 * it is defined to return OMC_Yield then it can return a time
 * slicing error code and will be called in a way such that if it
 * does return one then the function will be called again (at some
 * point) with the same parameters that it was called with the
 * first time.
 */
typedef OMC_Error OMC_Yield;

/*
 * Macro used to declare the return type of time slicing functions
 * internally.
 */
#if defined(TIME_SLICING) && defined(CHECK_SLICE_USAGE)
#define SLICE OMC_Yield*
#else
#define SLICE OMC_Yield
#endif


#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* !_OMC_TYPES_IF_H_ */
