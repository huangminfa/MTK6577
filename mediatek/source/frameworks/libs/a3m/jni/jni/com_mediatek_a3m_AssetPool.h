/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_mediatek_a3m_AssetPool */

#ifndef _Included_com_mediatek_a3m_AssetPool
#define _Included_com_mediatek_a3m_AssetPool
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    create
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mediatek_a3m_AssetPool_create
  (JNIEnv *, jobject);

/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    destroy
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mediatek_a3m_AssetPool_destroy
  (JNIEnv *, jobject);

/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    registerSource
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_mediatek_a3m_AssetPool_registerSource__Ljava_lang_String_2
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    registerSource
 * Signature: (Landroid/content/res/AssetManager;)V
 */
JNIEXPORT void JNICALL Java_com_mediatek_a3m_AssetPool_registerSource__Landroid_content_res_AssetManager_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    registerSource
 * Signature: (Lcom/mediatek/a3m/ResourceDataSource;)V
 */
JNIEXPORT void JNICALL Java_com_mediatek_a3m_AssetPool_registerSource__Lcom_mediatek_a3m_ResourceDataSource_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    setCacheSource
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_mediatek_a3m_AssetPool_setCacheSource
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    releaseResources
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mediatek_a3m_AssetPool_releaseResources
  (JNIEnv *, jobject);

/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    flush
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mediatek_a3m_AssetPool_flush
  (JNIEnv *, jobject);

/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    getTexture2D
 * Signature: (Ljava/lang/String;)Lcom/mediatek/a3m/Texture2D;
 */
JNIEXPORT jobject JNICALL Java_com_mediatek_a3m_AssetPool_getTexture2D
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    texture2DExists
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mediatek_a3m_AssetPool_texture2DExists
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    createTexture2D
 * Signature: (IIII[B)Lcom/mediatek/a3m/Texture2D;
 */
JNIEXPORT jobject JNICALL Java_com_mediatek_a3m_AssetPool_createTexture2D
  (JNIEnv *, jobject, jint, jint, jint, jint, jbyteArray);

/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    getOpenglTextureId
 * Signature: (Lcom/mediatek/a3m/Texture2D;)I
 */
JNIEXPORT jint JNICALL Java_com_mediatek_a3m_AssetPool_getOpenglTextureId
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_mediatek_a3m_AssetPool
 * Method:    getTotalTextureSizeInBytes
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_mediatek_a3m_AssetPool_getTotalTextureSizeInBytes
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
