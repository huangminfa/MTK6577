/*
 * Copyright (C) 2011 ALPS ELECTRIC CO., LTD. All Rights Reserved.
 *           This file must be operated as  based on the NDA (Non-Disclosure Agreement)
 *            with  ALPS ELECTRIC CO., LTD 
 *
 */
#ifndef MACM_API_H_
#define MACM_API_H_
#include "acmdef.h"
#define KACDGBL_MAX_PLTNUM 256 
#define KACDFLT_MAX_FLTAVL 128 
#define KACDFLT_MAX_FLTMDL 128 
#define KACDANGLEFLT_MAX_FLTAVL 128 
#define KACDFQFLT_MAX_LEN 32 
#define KACDCL3_MAX_BALLINFO 8 
#define KACDCL3_MAX_PLTBUF 256 
#define KACDCL3_MIN_SPWPLTNUM 50 
#define KACDCL3_MAX_BUFLEN 512 
#define KACDDR3_MAX_CIRINFO 8 
#define KACDDR3_MAX_AZIAVE 128 
#define KACDAZF_MAX_STABUF 32 
#define KACDDR3_MAX_STPBUF 32 
#define KACDDR0_MAX_PLTBUF 64 
#define KACDDR0_MAX_SILBUF 32 
#define KACDDR0_MAX_CIRS 16 
#ifdef ACDOPT_USEGYRO
#define KACDGYR_MAX_PLOT 256 
#endif
#define KACDDR3_MAX_ACCBUF 32 
#define KACDINC_MAX_SNSBUF 16 
#define KACDLLEN 20 
#ifndef NULL
#define NULL ((void*)0)
#endif
typedef enum {EACDERR_OK ,EACDERR_NOINIT ,EACDERR_PARAM ,EACDERR_BUSY ,EACDERR_NULLPTR ,EACDERR_STOPPED ,EACDERR_FAIL }TACDERR;
typedef enum {EACDEND_NORMAL ,EACDEND_ERROR ,EACDEND_CANCEL ,EACDEND_ABNORMAL ,EACDEND_INCOMPLETE ,EACDEND_NUM }TACDEND;typedef
enum {EACDCHGCLB_USER ,EACDCHGCLB_DUMMY ,EACDCHGCLB_CL3D0 ,EACDCHGCLB_CL3D1 ,EACDCHGCLB_CL3D2 ,EACDCHGCLB_CL3D3 ,
EACDCHGCLB_CL3MB ,EACDCHGCLB_NUM }TACDCHGCLB;typedef enum {EACDACT_START ,EACDACT_STOP ,EACDACT_CANCEL ,EACDACT_NUM }TACDACT;
typedef enum {EACDSNS_MAGRAW ,EACDSNS_ACCRAW ,EACDSNS_MAGFCD ,EACDSNS_MAGFLT_DIR3D ,EACDSNS_ACCFLT_DIR3D ,
#ifdef ACDOPT_USEGYRO
EACDSNS_MAGFLT_GYRO ,EACDSNS_ACCFLT_GYRO ,
#endif
EACDSNS_MAGFLT_INC ,EACDSNS_ACCFLT_INC ,EACDSNS_NUM }TACDSNS;typedef enum {EACDATT_AUTO ,EACDATT_NORM ,EACDATT_PERP ,
EACDATT_ROLP ,EACDATT_PERN ,EACDATT_ROLN ,EACDATT_REVP ,EACDATT_REVR ,EACDATT_ANDR ,EACDATT_ANDRR ,EACDATT_NUM }TACDATT;typedef
enum {EACDEVT_C3_RESTART ,EACDEVT_C3_AUTOSTART ,EACDEVT_C3_PROGRESS ,EACDEVT_C3_END ,EACDEVT_D3_DIR ,EACDEVT_D3_ATT ,
EACDEVT_D3_RESTART ,EACDEVT_D3_OVERRRANGE ,EACDEVT_D3_INRRANGE ,EACDEVT_D3_CALSTOP ,EACDEVT_D3_END ,
#ifdef ACDOPT_USEGYRO
EACDEVT_GY_SPEED ,EACDEVT_GY_RESTART ,EACDEVT_GY_OVERRRANGE ,EACDEVT_GY_INRRANGE ,EACDEVT_GY_END ,
#endif
EACDEVT_IC_INCINFO ,EACDEVT_IC_RESTART ,EACDEVT_IC_END ,EACDEVT_CHGPARAM ,EACDEVT_CHGCALIB ,EACDEVT_MAG_MICROTESLA ,
EACDEVT_MAG_NANOTESLA ,EACDEVT_NEXT ,EACDDBE_DUMMY =5000 ,EACDDBE_C3_PLOT1ST ,EACDDBE_C3_PLOTNXT ,EACDDBE_C3_INFO ,
EACDDBE_C3_CLBADJ ,EACDDBE_C3_PLOTSPW ,EACDDBE_C3_PLOTFCD ,EACDDBE_C3_PLOTDATA ,EACDDBE_C3_MBPLOTDATA ,EACDDBE_C3_MBSGMINFO ,
EACDDBE_C3_RATIO ,EACDDBE_D3_DIRRAW ,EACDDBE_D3_ATTRAW ,EACDDBE_D3_CHANGEATT ,EACDDBE_D3_ABNORMATT ,
#ifdef ACDOPT_USEGYRO
EACDDBE_GY_INFO ,EACDDBE_GY_CIR ,EACDDBE_GY_PLOT ,EACDDBE_GY_ADJCLB ,EACDDBE_GY_MAGSILENT ,EACDDBE_GY_ACCSILENT ,
EACDDBE_GY_ATTINFO ,EACDDBE_GY_AJC ,EACDDBE_GY_SYBF ,EACDDBE_GY_RAWCIR ,EACDDBE_GY_SWGSTATE ,EACDDBE_GY_FILTRAW ,
EACDDBE_GY_3POINT ,EACDDBE_GY_TMPCIR ,EACDDBE_GY_SELCIR ,
#endif
EACDDBE_IC_PLOT ,EACDDBE_IC_SLNT ,EACDDBE_ACCGAIN ,EACDDBE_CS_CORINFO ,
#ifdef ACDOPT_CLBSRH
EACDDBE_MAG_CLBDIFF ,EACDDBE_MAG_LVLHIGH ,EACDDBE_MAG_LVLSTABLE ,EACDDBE_CENTDVA ,EACDDBE_MBSRTBYDVA ,EACDDBE_MBSTPBYDVA ,
#endif
EACDEVT_NUM }TACDEVT,*PTACDEVT;typedef enum {EACDRUN_NULL =0x0000 ,EACDRUN_CL3D =0x0001 ,EACDRUN_DIR3D =0x0002 ,
#ifdef ACDOPT_USEGYRO
EACDRUN_GYRO =0x0100 ,
#endif
EACDRUN_INC =0x0200 ,}TACDRUNLIST,*PTACDRUNLIST;typedef enum {EACDIEV_NTCRX ,EACDIEV_CHGCLB ,EACDIEV_CHGPRM ,EACDIEV_STOP ,
EACDIEV_CANCEL ,EACDIEV_RECVTIMOUT ,EACDIEV_NTCACC ,
#ifdef ACDOPT_CLBSRH
EACDIEV_MAGLVLHIGH ,EACDIEV_MAGLVLSTABLE ,
#endif
EACDIEV_NUM }TACDIEV;
#define KACDSNSLV_STD 260 
#define KACDSNSLV_HIGH ((TInt)(((TInt32)KACDSNSLV_STD) * 133 / 100))
#define KACDSNSLV_MID ((TInt)(((TInt32)KACDSNSLV_STD) * 70 / 100))
#define KACDSNSLV_LOW ((TInt)(((TInt32)KACDSNSLV_STD) * 50 / 100))
#define KACDSNSLV2_STD 370 
#define KACDSNSLV2_HIGH ((TInt)(((TInt32)KACDSNSLV2_STD) * 133 / 100))
#define KACDSNSLV2_MID ((TInt)(((TInt32)KACDSNSLV2_STD) * 70 / 100))
#define KACDSNSLV2_LOW ((TInt)(((TInt32)KACDSNSLV2_STD) * 50 / 100))
#define KACDSNSLV3_STD 340 
#define KACDSNSLV3_HIGH ((TInt)(((TInt32)KACDSNSLV3_STD) * 133 / 100))
#define KACDSNSLV3_MID ((TInt)(((TInt32)KACDSNSLV3_STD) * 70 / 100))
#define KACDSNSLV3_LOW ((TInt)(((TInt32)KACDSNSLV3_STD) * 50 / 100))
#define KACDSNSLV35_STD 1333 
#define KACDSNSLV35_HIGH ((TInt)(((TInt32)KACDSNSLV35_STD) * 133 / 100))
#define KACDSNSLV35_MID ((TInt)(((TInt32)KACDSNSLV35_STD) * 70 / 100))
#define KACDSNSLV35_LOW ((TInt)(((TInt32)KACDSNSLV35_STD) * 50 / 100))
#define KACD3D_ADJUSTINC 0x7FFF
typedef struct {TInt32 x,y;}TACD2DVEC,*PTACD2DVEC;typedef const TACD2DVEC *PCTACD2DVEC;typedef struct {TACD2DVEC p1,p2;}
TACD2DLINE,*PTACD2DLINE;typedef const TACD2DLINE *PCTACD2DLINE;typedef struct {TInt32 a,b;}TACD2DLINF,*PTACD2DLINF;typedef 
const TACD2DLINF *PCTACD2DLINF;typedef struct {TACD2DVEC p;TACD2DVEC v;}TACD2DLVEC,*PTACD2DLVEC;typedef const TACD2DLVEC *
PCTACD2DLVEC;typedef struct {TInt32 x,y,z;}TACD3DVEC,*PTACD3DVEC;typedef const TACD3DVEC *PCTACD3DVEC;typedef struct {TInt16 x,
y,z;}TACD3DVEC16,*PTACD3DVEC16;typedef const TACD3DVEC16 *PCTACD3DVEC16;typedef struct {TInt64 x,y,z;}TACD3DVEC64,*PTACD3DVEC64
;typedef const TACD3DVEC64 *PCTACD3DVEC64;typedef struct {TACD3DVEC p1,p2;}TACD3DLINE,*PTACD3DLINE;typedef const TACD3DLINE *
PCTACD3DLINE;typedef struct {TACD3DVEC p;TACD3DVEC v;}TACD3DLVEC,*PTACD3DLVEC;typedef const TACD3DLVEC *PCTACD3DLVEC;typedef 
struct {TACD3DVEC p1,p2,p3;}TACD3DTRIANGLE,*PTACD3DTRIANGLE;typedef const TACD3DTRIANGLE *PCTACD3DTRIANGLE;typedef struct {
TInt32 m[3][3];}TACD3DMATRIX,*PTACD3DMATRIX;typedef const TACD3DMATRIX *PCTACD3DMATRIX;typedef struct {TInt64 m[3][3];}
TACD3DMATRIX64,*PTACD3DMATRIX64;typedef const TACD3DMATRIX64 *PCTACD3DMATRIX64;typedef struct {TInt32 sign;TInt32 len;TInt32 
num[KACDLLEN];}TACDLInt,*PTACDLInt;typedef struct {TUInt32 m;TUInt8 e;}TACDFloat,*PTACDFloat;
#ifdef ACMOPT_REAL
typedef struct {TReal x,y;}TACR2DVEC,*PTACR2DVEC;typedef const TACR2DVEC *PCTACR2DVEC;typedef struct {TACR2DVEC p1,p2;}
TACR2DLINE,*PTACR2DLINE;typedef const TACR2DLINE *PCTACR2DLINE;typedef struct {TReal a,b;}TACR2DLINF,*PTACR2DLINF;typedef const
TACR2DLINF *PCTACR2DLINF;typedef struct {TACR2DVEC p;TACR2DVEC v;}TACR2DLVEC,*PTACR2DLVEC;typedef const TACR2DLVEC *
PCTACR2DLVEC;
#endif
#ifdef ACMOPT_REAL
typedef struct {TReal x,y,z;}TACR3DVEC,*PTACR3DVEC;typedef const TACR3DVEC *PCTACR3DVEC;typedef struct {TACR3DVEC p1,p2;}
TACR3DLINE,*PTACR3DLINE;typedef const TACR3DLINE *PCTACR3DLINE;typedef struct {TACR3DVEC p;TACR3DVEC v;}TACR3DLVEC,*PTACR3DLVEC
;typedef const TACR3DLVEC *PCTACR3DLVEC;typedef struct {TACR3DVEC p1,p2,p3;}TACR3DTRIANGLE,*PTACR3DTRIANGLE;typedef const 
TACR3DTRIANGLE *PCTACR3DTRIANGLE;typedef struct {TReal m[3][3];}TACR3DMATRIX,*PTACR3DMATRIX;typedef const TACR3DMATRIX *
PCTACR3DMATRIX;typedef struct {TACR3DVEC vc;TReal r;}TACRSTDBALL,*PTACRSTDBALL;typedef const TACRSTDBALL *PCTACRSTDBALL;typedef
struct {TACR3DVEC vc;TACR3DVEC vr;}TACRMETABALL,*PTACRMETABALL;typedef const TACRMETABALL *PCTACRMETABALL;
#endif
typedef struct {TInt32 gblMagPeriod;TInt32 flgWRT;TInt32 snsAtt;TInt32 flgAft;TInt32 aftMtx0;TInt32 aftMtx1;TInt32 aftMtx2;
TInt32 aftMtx3;TInt32 aftMtx4;TInt32 aftMtx5;TInt32 aftMtx6;TInt32 aftMtx7;TInt32 aftMtx8;TInt32 cl3Mode;TInt32 cl3MinLen;
TInt32 cl3PltLen;TInt32 cl3spwPltLen;TInt32 cl3MaxInCnt;TInt32 cl3MinNum0;TInt32 cl3spwMaxNum2;TInt32 cl3spwCnt2;TInt32 
cl3spwMaxCnt2;TInt32 cl3spwAreaCnt2;TInt32 cl3spwRWidth2;TInt32 cl3spwMaxNum3;TInt32 cl3spwCnt3;TInt32 cl3spwMaxCnt3;TInt32 
cl3spwAreaCnt3;TInt32 cl3spwRWidth3;TInt32 cl3spwAreaPriority;TInt32 cl3spwMaxVar1;TInt32 cl3spwMaxVar2;TInt32 cl3spwMaxVar3;
#ifdef ACDOPT_CLBSRH
TInt32 cl3EnaEllipse;TInt32 cl3MbCentBySrh;TInt32 cl3MbSrhTimes;TInt32 cl3MbMinRatio;TInt32 cl3MbMinPlots;TInt32 cl3MbMagLvlH;
TInt32 cl3MbMaxDiff;TInt32 cl3MbVDiv;TInt32 cl3MbSgmSrtVal;TInt32 cl3MbSgmEndVal;TInt32 cl3MbSgmUpdRatio;
#endif
TInt32 dr3ValidL;TInt32 dr3RRange;TInt32 dr3NRange;TInt32 dr3StaWidth;TInt32 dr3StaTimes;TInt32 dr3StaCover;TInt32 dr3AutoClb;
TInt32 dr3AziAve;TInt32 dr3AziAveStop;TInt32 dr3MagAvLen;TInt32 dr3AccAvLen;TInt32 dr3AttAveLen;TInt32 dr3AccZLimit;TInt32 
dr3AttLimit;TInt32 dr3CalAttType;TInt32 dr3AttMode;TInt32 dr3AccStopSnsThr;TInt32 dr3AccStopSnsCnt;TInt32 dr3SmtPeriod;TInt32 
dr3SmtStep;TInt32 dr3thetaNtoR;TInt32 dr3thetaRtoN;TInt32 dr3AndRev;TInt32 dr3FilterNoInit;
#ifdef ACDOPT_USEGYRO
TInt32 gyrTimes;TInt32 gyrPltLen;TInt32 gyrPltNum;TInt32 gyrMinLen;TInt32 gyrMinCal;TInt32 gyrMinCalAcc;TInt32 gyrRRange;TInt32
gyrAutoClb;TInt32 gyrBufNum;TInt32 gyrArcMinVn;TInt32 gyrArcMaxVt;TInt32 gyrSilPltN;TInt32 gyrSilLenDvaL;TInt32 gyrSilLenDvaH;
TInt32 gyrSilAccN;TInt32 gyrSilAccL;TInt32 gyrMkSrtCir;TInt32 gyrCirStyN;TInt32 gyrCirStyT;TInt32 gyrSPolLimT;TInt32 gyrAccSuiT
;TInt32 gyrAccSuiN;TInt32 gyrAccSuiP;TInt32 gyrZureTimes;TInt32 gyrZureSize;TInt32 gyrZureDist;TInt32 gyrFixNum;TInt32 
gyrMagEna;TInt32 gyrMagAvLen;TInt32 gyrAccEna;TInt32 gyrAccAvLen;TInt32 gyrGyFltEna;TInt32 gyrGyFltAvLen;TInt32 gyrAziFltEna;
TInt32 gyrAziFltAvLen;TInt32 gyrAziFrqEna;TInt32 gyrAziFrqLen;TInt32 gyrMinLen2;TInt32 gyrMinData;TInt32 gyrlenAddMax;TInt32 
gyrStaSum;TInt32 gyrStaMax;TInt32 gyrRpdSum;TInt32 gyrRpdMax;
#endif
TInt32 incAutoStart;TInt32 incCont;TInt32 incLvl;TInt32 incCntNum;TInt32 incSlntNum;TInt32 incIncJudgR;TInt32 incAccThr;TInt32 
incMaxCnt;TInt32 incMagAvLen;TInt32 incAccAvLen;}TACDPARAM,*PTACDPARAM;typedef const TACDPARAM *PCTACDPARAM;typedef struct {
TInt16 fEnable;TInt16 AvTimes;TInt16 AvLen;TInt16 fFltBufFull;TInt16 AvCnt;TInt16 AvIx;TInt16 AvBuf[KACDFLT_MAX_FLTAVL][3];}
TACDFILTWK,*PTACDFILTWK;typedef const TACDFILTWK *PCTACDFILTWK;typedef struct {TInt16 val;TInt16 cnt;}TACDFREQFLTWRK,*
PTACDFREQFLTWRK;typedef struct {TInt16 fEna;TInt16 nBuf;TInt16 cBuf;TInt16 ixBuf;TInt16 buf [KACDFQFLT_MAX_LEN];TACDFREQFLTWRK 
freq[KACDFQFLT_MAX_LEN];}TACDFREQFLTWK,*PTACDFREQFLTWK;typedef struct {TInt16 x,y;}TACDANGLEFILT_ITEM;typedef struct {TInt16 
AveLen;TInt16 AveBufCnt;TInt16 AveBufIx;TACDANGLEFILT_ITEM AveBuf[KACDANGLEFLT_MAX_FLTAVL];}TACDANGLEFILTWK,*PTACDANGLEFILTWK;
typedef const TACDANGLEFILTWK *PCTACDANGLEFILTWK;typedef struct {TInt32 Period;TInt32 Step;TInt32 Count;}TACDANGLESMTWK,*
PTACDANGLESMTWK;typedef const TACDANGLESMTWK *PCTACDANGLESMTWK;typedef struct {TBool fAv;TInt64 ave;TInt64 sum;TInt32 cnt;}
TACDDVA,*PTACDDVA;typedef const TACDDVA *PCTACDDVA;typedef struct {TInt32 cx,cy,cz;TInt32 r;TInt32 ay,az;TACDDVA dwk;}
TACDCLBDVA,*PTACDCLBDVA;typedef const TACDCLBDVA *PCTACDCLBDVA;typedef struct {TInt32 xc3d,yc3d,zc3d,r3d;TInt32 ax,ay,az;TInt32
sgm;TInt32 Acnt;TInt32 lvl;}TACDCALIBINFO,*PTACDCALIBINFO;typedef const TACDCALIBINFO *PCTACDCALIBINFO;
#define KACD_EVTFUNCS 16
typedef struct {TACDRUNLIST rid;void (*cb)(PTAny pW,TACDIEV evt,TInt32 rx,TInt32 ry,TInt32 rz);}TACDEVTFUNC;typedef union {
TACD3DTRIANGLE tri;struct {TACD3DLINE lp;TACD3DVEC dmy;}l1;struct {TACD3DVEC dmy;TACD3DLINE lp;}l2;}TACDNTI_C3_TRI,*
PTACDNTI_C3_TRI;typedef union {TACD3DVEC pt[4];struct {TACDNTI_C3_TRI tri;TACD3DVEC dmy;}t1;struct {TACD3DVEC dmy;
TACDNTI_C3_TRI tri;}t2;}TACDNTI_C3_SQR,*PTACDNTI_C3_SQR;typedef struct {TACD3DLVEC cv1,cv2;TACD3DLVEC bv;TACD3DVEC cc;TInt32 cr
;}TACDNTI_C3_CIRINFO,*PTACDNTI_C3_CIRINFO;typedef struct {TBool fDone;TBool fValid;TInt32 cntRetry;TInt32 ix;TACDNTI_C3_SQR sqr
;TACDNTI_C3_CIRINFO cir[2];TACD3DVEC bc;TInt32 br;TInt32 sum;}TACDNTI_C3_PLOT,*PTACDNTI_C3_PLOT;typedef struct {TInt32 s;TInt32
x,y,z;TInt32 r;TInt32 ax,ay,az;TInt32 rave;TInt32 n;}TACDNTI_C3_CLBADJ,*PTACDNTI_C3_CLBADJ;typedef struct {PCTACD3DVEC pBuf;
TInt32 nDataCount;}TACDNTI_C3_PLOTFCD,*PTACDNTI_C3_PLOTFCD;typedef struct {PTACD3DVEC16 pBuf;TInt32 ixOld;TInt32 nDataCount;
TInt32 nBufEntries;}TACDNTI_C3_PLOTDATA,*PTACDNTI_C3_PLOTDATA;typedef struct {TInt32 StaWidth;TInt32 StaTimes;TInt32 StaCount;
TInt32 StaAzi;TInt32 CurAzi;TInt32 LasAzi;TBool fCover;TInt32 bix;TInt32 buf[KACDAZF_MAX_STABUF];}TACDAZIFLTWK,*PTACDAZIFLTWK;
typedef struct {TInt32 pitch;TInt32 roll;TInt32 theta;}TACDATTINFO,*PTACDATTINFO;
#ifdef ACDOPT_USEGYRO
typedef struct {TInt32 sx,sy,sz;TInt32 time;}TACDGYRINFO,*PTACDGYRINFO;
#endif
#ifdef ACDOPT_USEGYRO
typedef struct {TInt32 Rot2d;TInt32 Rot3d;TACD3DVEC Vec3d;TACD3DVEC Shaft;}TACDNTI_GY_ATTINFO,*PTACDNTI_GY_ATTINFO;typedef 
struct _TACD_GY_BUF {TInt32 tick;TACD3DVEC raw;TACD3DVEC onb;TBool fMagSilent;TBool fAccValid;TBool fAccSilent;struct 
_TACD_GY_BUF *pNxtAcc;struct _TACD_GY_BUF *pBakAcc;TACD3DVEC acc;TACDNTI_GY_ATTINFO att;TACD3DVEC v1,v2,v3;TInt32 n1,n2,n3;}
TACD_GY_BUF,*PTACD_GY_BUF;typedef struct {TInt32 nBuf;TInt32 uBuf;TInt32 cBuf;TInt32 ixTop;TInt32 ixNxt;TInt32 ixOld;struct 
_TACD_GY_BUF *pAccTop;TACD_GY_BUF buf[KACDGYR_MAX_PLOT];}TACDNTI_GY_PBUF,*PTACDNTI_GY_PBUF;typedef enum {ACDGYCIR_DEFAULT ,
ACDGYCIR_BYMAG ,ACDGYCIR_BYACC ,ACDGYCIR_TEMP ,}EACD_GY_CIR;typedef struct {EACD_GY_CIR kind;TACD3DLVEC lv;TInt32 cr;TInt32 tx,
ty,tz;}TACDNTI_GY_CIR,*PTACDNTI_GY_CIR;typedef struct {TACD3DVEC spRaw,epRaw;TACD3DVEC spOnB,epOnB;TInt32 theta;TInt32 time;
TInt32 tsp3d;TInt32 sx,sy,sz;TBool fByAcc;}TACDNTI_GY_INFO,*PTACDNTI_GY_INFO;
#endif
typedef struct {TInt32 Inc;TInt32 CirR;TInt32 Lvl;}TACDINCINFO,*PTACDINCINFO;typedef struct {TInt32 Inc;TACD3DVEC MagSns;
TACD3DVEC AccSns;}TACDNTI_IC_PLOT,*PTACDNTI_IC_PLOT;typedef struct {TInt32 incJudgCnt;TInt32 incSlntCnt;}TACDNTI_IC_SLNT,*
PTACDNTI_IC_SLNT;
#ifdef ACDOPT_CLBSRH
typedef enum {ACDMBSRH_STOP =0 ,ACDMBSRH_START ,ACDMBSRH_PROGRESS ,ACDMBSRH_NUM }EACDMBSRH;typedef struct {TACR3DVEC vStdVec;
TBool fExist;TReal MinTheta;TACD3DVEC vData;}TACDC3S_SELBUF,*PTACDC3S_SELBUF;
#define KACDC3S_MAXSEL ((180 / 6 - 1) * (360 / 9) + 2)
typedef struct {TACRMETABALL mb;TReal dva;TInt32 ax;TInt32 ay;TInt32 az;}TACDCLBSRH,*PTACDCLBSRH;
#define KACDC3S_DIVSTEP 1
#define KACDC3S_MAXVDIV 8
#define KACDC3S_MAXPNL (3 + 4 + 5 + 6 + 7 + 8 + 9 + 10)
#define KACDC3S_MAXRED 11
#define KACDC3S_TOTAL (KACDC3S_MAXPNL * 8 + KACDC3S_MAXRED * 4 + 2)
typedef struct {TBool fOnDat;TACDC3S_SELBUF plt[8];}TACDC3S_CORPNL,*PTACDC3S_CORPNL;typedef struct {TBool fOnDat;TACDC3S_SELBUF
plt[4];}TACDC3S_CORRED,*PTACDC3S_CORRED;typedef struct {TBool fOnDat;TACDC3S_SELBUF plt[2];}TACDC3S_CORPOL,*PTACDC3S_CORPOL;
typedef struct {TInt PoleAxis;TACD3DVEC bc;TInt32 br;TInt n1Pnl;TInt n1Red;TInt nPnl;TInt nPlt;TInt cPnl;TInt cPlt;
TACDC3S_CORPNL pnl[KACDC3S_MAXPNL];TACDC3S_CORRED red[KACDC3S_MAXRED];TACDC3S_CORPOL pol;TInt GetState;TInt GetIx1;TInt GetIx2;
}TACDC3S_CORBUF,*PTACDC3S_CORBUF;typedef const TACDC3S_CORBUF *PCTACDC3S_CORBUF;typedef union {struct {TACDC3S_CORBUF xpol,ypol
,zpol;}s;TACDC3S_CORBUF arr[3];}TACDC3S_CORBUF_U,*PTACDC3S_CORBUF_U;typedef const TACDC3S_CORBUF_U *PCTACDC3S_CORBUF_U;
#endif
#ifdef ACDOPT_CLBSRH
#define KACDMAX_MAGLVBUF 30
typedef enum {ACDMAGLVCHK_CHKHIGHLVL ,ACDMAGLVCHK_CHKSTABLE ,ACDMAGLVCHK_NUM }EACDMAGLVCHKMD;
#endif
#ifdef ACDOPT_CLBSRH
#define KACDMAX_CSWCENTBUF 8 
#endif
#define KACD_INST_ID 0xAD476C5FL
typedef struct _TACDWK {TUInt32 InstID;TACDPARAM prm;TBool fClbIsDefault;TACDCALIBINFO clb;TACDCALIBINFO svclb;TACDRUNLIST runl
;TInt32 Dir3d;TInt32 Dir3dSmt;TACDATTINFO Atte3d;TInt32 accPitch;TInt32 accRoll;TInt32 accGain;TACDEVTFUNC EvtFunc[
KACD_EVTFUNCS];TInt32 SnsLv;TInt32 MPow;TInt32 Fukkaku;TInt32 Henkaku;TACD3DVEC MRawNT;TInt32 StdBr;TInt32 StdCr;
#ifdef ACDOPT_CLBSRH
EACDMAGLVCHKMD MagLvChkMode;TInt32 MagLvCorC;TInt32 MagLvCorIv;TInt32 MagLvBufC;TInt32 MagLvBufIx;TInt32 MagLvBuf[
KACDMAX_MAGLVBUF];
#endif
TInt32 aQCM;TInt32 cMOU;TInt32 aABG;TInt32 bWNO;TACD3DVEC16 aMEI[KACDCL3_MAX_PLTBUF];TACDNTI_C3_CLBADJ cIQQ[3];TInt32 aDCA;
TInt32 bZOI,aPFC;TInt32 cLRK,aAUY;TInt32 bXHG,aMYA;TInt32 cJKI,aDVS;TInt32 cAIA,aPYU;TInt32 cMLC,aAGE;TBool bWSM;TACD3DVEC aMJG
;TACD3DVEC16 cIVO[KACDCL3_MAX_BUFLEN];TInt8 aDGY[KACDCL3_MAX_BUFLEN];TInt8 bZTG[KACDCL3_MAX_BUFLEN];TInt32 aPKA;TInt8 cLWI[8][4
];TInt32 aAZW;TInt32 bXME;TACDCALIBINFO aNCY;TACDFloat cJPG[27];TInt32 aEAQ;TInt32 cAMY;TInt32 aQDS;TInt32 cMQA;TInt32 aAAI;
TInt32 bWMQ;TACD3DVEC aMDK;TInt32 cIPS;TACD3DVEC aDBC;TInt32 bZNK;TInt32 aPEE;TInt32 cLQM;TACDAZIFLTWK aAUA;TACDFILTWK bXGI;
TACDFILTWK aMXC;TACDANGLEFILTWK cJJK;TACDANGLEFILTWK aDUU;TACDANGLEFILTWK cAHC;TBool aPXW;TInt32 cMKE;TACDATTINFO aAFG;TBool 
bWRO;TInt32 aMII;TInt32 cIUQ;TInt32 aDGA;TInt32 bZSI;TInt32 aPJC;TInt32 cLVK;TACD3DVEC aAYY;TACD3DVEC bXLG;TBool aNCA;TBool 
cJOI;TBool aDZS;TACD3DVEC cAMA;TBool aQCU;TACDATT cMPC;TACDATT aABO;TACDANGLESMTWK bWNW;TBool aMEQ;TACDANGLEFILTWK cIQY;TInt32 
aDCI;TInt32 bZOQ;TInt32 aPFK;TACD3DVEC cLRS;TACD3DVEC aAVG[KACDDR3_MAX_STPBUF];TBool bXHO;
#ifdef ACDOPT_USEGYRO
TInt32 aMYI;TInt32 cJKQ;TInt32 aDWA;TInt32 cAII;TACD3DVEC aPZC;TInt32 cMLK;TInt32 aAGM;TInt32 bWSU;TInt32 aMJO;TACDNTI_GY_PBUF 
cIVW;TACDNTI_GY_CIR aDHG;TACDNTI_GY_INFO bZTO;TBool aPKI;TBool cLWQ;TInt32 aBAE;TInt32 bXMM;TInt32 aNDG;TACDNTI_GY_ATTINFO cJPO
;TACDFILTWK aEAY;TACDFILTWK cANG;TACDANGLEFILTWK aQEA;TACDFREQFLTWK cMQI;TACDFILTWK aAAC;TACDCALIBINFO bWMK;TACDCALIBINFO aMDE;
TACDCALIBINFO cIPM;TACDCALIBINFO aDAW;TBool bZNE;TInt32 aPDY;TACD3DVEC cLQG;TACD3DVEC aATU;TACD3DVEC bXGC;TInt32 aMWW;TInt32 
cJJE;TInt32 aDUO;TInt32 cAGW;TInt32 aPXQ;TInt32 cMJY;TInt32 aAFA;TInt32 bWRI;TBool aMIC;TInt32 cIUK;TACD2DVEC aDFU;TInt32 bZSC;
TBool aPIW;TBool cLVE;TInt32 aAYS;
#endif
TInt32 incRes;TBool incSlnt;TInt32 incMagAccAngl;TInt32 incAccLen;TInt32 incCirR;TBool incMagBufflg;TACDNTI_IC_PLOT incPlotInfo
;TInt32 incJudgCnt;TInt32 incSlntCnt;TInt32 incAngle;TInt32 incMeasCnt;TBool incSetMagFilt;TBool incSetAccFilt;TACD3DVEC 
indMagFilt;TACD3DVEC indAccFilt;TACDFILTWK incMagFiltWk;TACDFILTWK incAccFiltWk;TInt32 incAccMin;TInt32 incAccMax;PTAny CbParam
;void (MACM_CALLBACK *cbNtcEvt )(TACDEVT evt,TInt32 ip,PTAny vp ,PTAny CbParam);void (MACM_CALLBACK *cbNtcRaw )(TACDSNS snsCode
,TInt x,TInt y,TInt z ,PTAny CbParam);void (MACM_CALLBACK *cbNtcFilt)(TACDSNS snsCode,TInt x,TInt y,TInt z ,PTAny CbParam);
#ifdef ACDOPT_CLBSRH
TACDC3S_CORBUF_U cswCorBuf;EACDMBSRH cswMbSrhState;TInt32 cswIxCentBuf;TInt32 cswNumCentBuf;TACD3DVEC cswCentBuf[
KACDMAX_CSWCENTBUF];
#endif
}TACDWK,*PTACDWK;MACM_EXTERN TACDERR MACM_API AcdInit(PTACDWK pW,TInt SnsLv,TInt MPow,TInt Fukkaku,TInt Henkaku,PTAny CbParam,
void (MACM_CALLBACK *cbNtcEvt )(TACDEVT evt,TInt32 ip,PTAny vp,PTAny CbParam),void (MACM_CALLBACK *cbNtcRaw )(TACDSNS snsCode,
TInt x,TInt y,TInt z,PTAny CbParam),void (MACM_CALLBACK *cbNtcFilt)(TACDSNS snsCode,TInt x,TInt y,TInt z,PTAny CbParam));
MACM_EXTERN TACDERR MACM_API AcdGetRunList (PTACDWK pW,PTACDRUNLIST pState);MACM_EXTERN TACDERR MACM_API AcdGetParam (PTACDWK 
pW,PTACDPARAM pBuf);MACM_EXTERN TACDERR MACM_API AcdSetParam (PTACDWK pW,PCTACDPARAM pParam);MACM_EXTERN TACDERR MACM_API 
AcdSetAccGain (PTACDWK pW,TInt gain);MACM_EXTERN TACDERR MACM_API AcdGetCalibInfo (PTACDWK pW,PTACDCALIBINFO pBuf);MACM_EXTERN 
TACDERR MACM_API AcdSetCalibInfo (PTACDWK pW,PCTACDCALIBINFO pInfo);MACM_EXTERN TACDERR MACM_API AcdCl3d (PTACDWK pW,TACDACT 
act);MACM_EXTERN TACDERR MACM_API AcdDir3d (PTACDWK pW,TACDACT act);
#ifdef ACDOPT_USEGYRO
MACM_EXTERN TACDERR MACM_API AcdGyro (PTACDWK pW,TACDACT act);
#endif
MACM_EXTERN TACDERR MACM_API AcdInc (PTACDWK pW,TACDACT act);MACM_EXTERN TACDERR MACM_API AcdStopAll (PTACDWK pW);MACM_EXTERN 
TACDERR MACM_API AcdGet3dAzimuth (PTACDWK pW,PTInt pDir);MACM_EXTERN TACDERR MACM_API AcdGet3dAttitude (PTACDWK pW,PTInt pPitch
,PTInt pRoll);MACM_EXTERN TACDERR MACM_API AcdSet3dAttitude (PTACDWK pW,TInt Pitch,TInt Roll);MACM_EXTERN TACDERR MACM_API 
AcdSetAziLmtRNoChk (PTACDWK pW,TBool flag);MACM_EXTERN TACDERR MACM_API AcdPutSnsVal (PTACDWK pW,TInt x,TInt y,TInt z);
MACM_EXTERN TACDERR MACM_API AcdPutAccVal (PTACDWK pW,TInt x,TInt y,TInt z);
#ifdef ACDOPT_CLBSRH
MACM_EXTERN TACDERR MACM_API AcdPutFixedCalibData (PTACDWK pW,PTACD3DVEC pSns,TInt32 nSns);MACM_EXTERN TACDERR MACM_API 
AcdPutFixedCalibDataEx(PTACDWK pW,PTACD3DVEC pSns,TInt32 nSns);
#endif
MACM_EXTERN TACDERR MACM_API AcdSetDefaultCalibParam(PTACDWK pW,TInt SnsPeriod,TInt ClbPrec);
#ifdef ACDOPT_GENASSERT
MACM_EXTERN TACDERR MACM_API AcdSetAssert(PTAny CbParam,void (MACM_CALLBACK *cbAssert)(PTInt8 pFileName,TInt line,PTInt8 
pFuncName,PTInt8 pCond,PTAny CbParam));
#else
#define AcdSetAssert(A, B)
#endif
MACM_EXTERN const TInt8 *MACM_API AcdGetVer(void);
#ifdef ACDOPT_CLBSRH
MACM_EXTERN TBool MACM_API AcdClSrh (PTACDWK pW,PTACDC3S_CORBUF pBuf,TInt32 xc,TInt32 yc,TInt32 zc,TInt32 r,TInt times,
PTACDCLBSRH pRsu);MACM_EXTERN TBool MACM_API AcdClMbCalc (PTACDWK pW,PTACDC3S_CORBUF pBuf,PTACDCLBSRH pRsu);MACM_EXTERN TInt 
MACM_API AcdClCorInit (PTACDWK pW,PTACDC3S_CORBUF pBuf,TInt32 xc,TInt32 yc,TInt32 zc,TInt32 r,TInt32 vDiv,TInt32 pol);
MACM_EXTERN TBool MACM_API AcdClCorPutVal (PTACDWK pW,PTACDC3S_CORBUF pBuf,PCTACD3DVEC pDat,PTInt pRatio,PTInt pPlots);
MACM_EXTERN TReal MACM_API AcdClCorDeviationByClb(PTACDWK pW,PTACDC3S_CORBUF pBuf,PCTACDCALIBINFO pClb);MACM_EXTERN TReal 
MACM_API AcdClCorDeviation (PTACDWK pW,PTACDC3S_CORBUF pBuf,PCTACRMETABALL pMb);MACM_EXTERN TInt MACM_API AcdClCorGetAll (
PTACDWK pW,PTACDC3S_CORBUF pBuf,PTACD3DVEC pDat,TInt nDat);MACM_EXTERN TBool MACM_API AcdClCorGetFirst (PTACDWK pW,
PTACDC3S_CORBUF pBuf,PTACD3DVEC pDat);MACM_EXTERN TBool MACM_API AcdClCorGetNext (PTACDWK pW,PTACDC3S_CORBUF pBuf,PTACD3DVEC 
pDat);MACM_EXTERN PTACDC3S_CORBUF MACM_API AcdClGetBufP(PTACDWK pW,TInt32 BufId);MACM_EXTERN TACDERR MACM_API 
AcdStartEllipseCalib(PTACDWK pW,TBool fStart);
#endif
#endif

