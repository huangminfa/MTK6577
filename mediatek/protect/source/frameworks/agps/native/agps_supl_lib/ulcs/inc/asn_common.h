/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2007
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
 *****************************************************************************
 * Filename:
 * --------------------------------------------------------
 *   asn_common.h
 *
 * Project:
 * --------------------------------------------------------
 *   MONZA
 *
 * Description:
 * --------------------------------------------------------
 *   Autogenerated file using the ubiasn1_for_csi.bat.
 *
 * Author:
 * --------------------------------------------------------
 *   Jethro E. Lee
 *
 ****************************************************************************/

/****************************************************************************
 *
 *               Assignment : Ubinetics ASN.1 Compiler
 *               CONFIDENTIAL
 *               Copyright (C) 2004 UbiNetics Ltd. All rights reserved.
 *               Cambridge Technology Centre
 *               Melbourn Royston
 *               Herts SG8 6DP UK
 *               Tel: +44 1763 262222
 *
 ****************************************************************************
 *
 * COMPONENT:   PS_FMK
 * MODULE:      ASN_COMMON
 * DESCRIPTION: Autogenerated by UBIASN.1 Compiler (Version 3.0)
 *
 ****************************************************************************/

/**
 * @file asn_common.h
 *
 * ASN.1 Common header file
 *
 * @ingroup asn_common
 */
 
/*****************************************************************************
 * $Log:$
 *
 * 06 19 2012 archilis.wang
 * [ALPS00303520] [Merge] Level 3 SW modules 提升至 Level 2 on ALPS.ICS2.MP
 * [Merge] Level 3 SW modules 提升至 Level 2 on ALPS.ICS2.MP
 *
 * Mar 29 2010 mtk80242
 * [MAUI_02169894] asn.1 jmpbuf modify for modis
 * 
 *
 * Mar 23 2010 mtk80242
 * [MAUI_02167179] [asn.1] replace jmp_buf with asn_jmpbuf[11]
 * 
 *
 * Mar 1 2010 mtk80242
 * [MAUI_02155058] [asn.1]check-in w10.09
 * 
 *
 * Apr 7 2009 mtk01370
 * [MAUI_01659677] [asn.1]release 2.2.8 solve asnmemcopy and const and pMemFreeFunc issue
 * 
 *
 * Jul 16 2008 mtk01370
 * [MAUI_00805735] [ASN]check in ASN common file in asn_re folder
 * 
 *
 * Sep 8 2007 mtk01355
 * [MAUI_00543985] [MAUI][UAS][DBME] merge to maintrunk
 * Merge newest MONZA29E4 change to MAUI
 *
 * Sep 7 2007 mtk01355
 * [MAUI_00543981] [MAUI][UAS][ASN] merge to maintrunk from MONZA branch
 * UAS ASN associated files merge to MAUI maintrunk
 *
 * Aug 6 2007 mtk01760
 * [MAUI_00527754] [Build Environment] Merge MONZA29E4 to MAUI
 * Add copyright header.
 ****************************************************************************/
 
#ifndef _ASN_COMMON_H
#define _ASN_COMMON_H

/* STANDARD INCLUDES ********************************************************/
#include <setjmp.h>


typedef enum
{
   ASN_OK    =  0,
   ASN_ERROR = -1
}
AsnStatus;

typedef S8 AsnNull;

typedef struct
{
   int length;
   unsigned char value[100];
}
AsnAny;

typedef S8 AsnObjId;

typedef S8 AsnOpen;

typedef S8 AsnBool;

#ifndef TRUE
#define TRUE 1
#endif
#ifndef FALSE
#define FALSE 0
#endif

#ifndef NULL
#define NULL (void *)0
#endif

#ifndef NOT_USED
#define NOT_USED(x) (void)(x)
#endif

#define UA1_ERROR( x ) AsnError( pContext, x )

typedef struct
{
#ifdef  MCD_DLL_EXPORT
   void *pMemBlock[1024];
#else
   void *pMemBlock[20];
#endif
   void **ppNext;
   void **ppEnd;
} AllocRecord;
//Wayne add for customize call back
typedef  void  (*PAsnMemAllocCallBack)(void **memPtr, unsigned long size, const char *file, unsigned long line);
typedef  void  (*PAsnMemFreeCallBack)(void ** ppBuffer);
//Wayne add for customize call back end

//add by changshun for replace jmpbuf
#ifdef MCD_DLL_EXPORT 
  #define asn_jmpbuf jmp_buf  
#else 
  #if defined(__MTK_TARGET__) && defined(__RVCT__)
    typedef long long asn_jmpbuf[11];
#elif defined(__MTK_TARGET__)
      typedef int asn_jmpbuf[11];
  #else  
    #define asn_jmpbuf jmp_buf
  #endif 
#endif
//add by changshun for replace jmpbuf 

typedef struct
{
   U32 shiftRegister;
   U32 shiftRegisterLength;
   U8 *pEncoded;
   U8 *pEncodedEnd;
   //jmp_buf env;
   asn_jmpbuf env;
   void *encodeAlloc;
   AllocRecord *decodeAlloc;
#ifdef  MCD_DLL_EXPORT
   char *printBufStart;
   char *printBufNext;
   U32 printBufSize;
#endif
   void *pAppContext;
   U32 result;
   PAsnMemAllocCallBack pMemAllocFunc;
   PAsnMemFreeCallBack  pMemFreeFunc;
} AsnContext;

#ifdef  MCD_DLL_EXPORT
#define ASNBUF_BLOCKSIZE 4000
#define ASNBUF_RESERVE 500

void AsnFreeString( char *string );
void InitAsnBuf( AsnContext *pContext );
void AsnPrint( AsnContext *pContext, char *fmt, ... );
void AsnPrintNull( AsnContext *pContext );
void AsnPrintInteger( AsnContext *pContext, S32 value );
void AsnPrintBoolean( AsnContext *pContext, Bool boolean );
void AsnPrintOctetString( AsnContext *pContext, U8 *buffer, U32 length );
void AsnPrintBitString( AsnContext *pContext, U8 *buffer, U32 length );
void AsnPrintCharacterString( AsnContext *pContext, char *string );
#endif

U16 GetUperLengthDeterminant( AsnContext *pContext );

void PutUperLengthDeterminant( AsnContext *pContext, U16 length );

void AsnFreeDecoded( void *pType );
void AsnFreeEncoded( U8 *pEncoded );
void AsnRootDecodeAlloc( AsnContext *pContext, void **ppType, int size );
void AsnDecodeAlloc( AsnContext *pContext, void **ppMem, int size );
void AsnDecodeFree( AllocRecord *decodeAlloc );

void AsnEncodeAlloc( AsnContext *pContext, U8 **ppEncoded, U32 *pEncodedLength );
void AsnEncodeFree( void *pFree );

void AsnError( AsnContext *pContext, U32 errorCode );

extern void initFifo( AsnContext *pContext, U8 *buffer, U32 bufferLength );
extern void flushFifo( AsnContext *pContext );
extern U32 getShortBits( AsnContext *pContext, U32 numBits );
extern U32 getBits( AsnContext *pContext, U32 numBits );
extern void getLongBits( AsnContext *pContext, U32 numBits, U8 *outputBuffer );
extern void putShortBits( AsnContext *pContext, U32 numBits, U32 data );
extern void putBits( AsnContext *pContext, U32 numBits, U32 data );
extern void putLongBits( AsnContext *pContext, U32 numBits, U8 *data );

#endif /* _ASN_COMMON_H */
