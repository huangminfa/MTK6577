/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein is
 * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
 * the prior written permission of MediaTek inc. and/or its licensors, any
 * reproduction, modification, use or disclosure of MediaTek Software, and
 * information contained herein, in whole or in part, shall be strictly
 * prohibited.
 * 
 * MediaTek Inc. (C) 2010. All rights reserved.
 * 
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
 * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
 * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
 * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
 * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
 * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
 * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
 * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
 * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
 * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
 * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
 * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek
 * Software") have been modified by MediaTek Inc. All revisions are subject to
 * any receiver's applicable license agreements with MediaTek Inc.
 */

/****************************************************************************
 *
 *               Assignment : MTK ASN.1 Compiler
 *               CONFIDENTIAL
 *               Copyright (C) 2004 UbiNetics Ltd. All rights reserved.
 *               Cambridge Technology Centre
 *               Melbourn Royston
 *               Herts SG8 6DP UK
 *               Tel: +44 1763 262222
 *
 *****************************************************************************/
 /****************************************************************************
 *
 * COMPONENT:   UPER	L3
 * MODULE:      rrlp_asn
 * DESCRIPTION: Autogenerated by ASN.1 Compiler - UPER (Version 1.0)
 *
 ****************************************************************************/

/**
 * @file rrlp_asn.h
 *
 * ASN.1 header file
 *
 */
#ifdef __RRLP_REL_5__

#if !defined _RRLP_ASN_H
#define _RRLP_ASN_H



/* OCTET STRING Ext-GeographicalInformation */
typedef struct RRLP_Ext_GeographicalInformation
{
   U8 numOctets;
   U8 stringData[20];
}
RRLP_Ext_GeographicalInformation;

#define RRLP_maxExt_GeographicalInformation 20
#define RRLP_maxNumOfPrivateExtensions 10
/* SEQUENCE PCS-Extensions */
typedef struct RRLP_PCS_Extensions
{


   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_PCS_Extensions;

/* INTEGER Accuracy */
typedef U8 RRLP_Accuracy;

/* ENUMERATED PositionMethod */
typedef enum
{
   RRLP_PositionMethod_eotd,
   RRLP_PositionMethod_gps,
   RRLP_PositionMethod_gpsOrEOTD
}
RRLP_PositionMethod;

/* INTEGER MeasureResponseTime */
typedef U8 RRLP_MeasureResponseTime;

/* ENUMERATED UseMultipleSets */
typedef enum
{
   RRLP_UseMultipleSets_multipleSets,
   RRLP_UseMultipleSets_oneSet
}
RRLP_UseMultipleSets;

/* ENUMERATED EnvironmentCharacter */
typedef enum
{
   RRLP_EnvironmentCharacter_badArea,
   RRLP_EnvironmentCharacter_notBadArea,
   RRLP_EnvironmentCharacter_mixedArea
    // ...
}
RRLP_EnvironmentCharacter;

/* DEFINED BTSPosition */
typedef RRLP_Ext_GeographicalInformation RRLP_BTSPosition;

/* INTEGER BCCHCarrier */
typedef U16 RRLP_BCCHCarrier;

/* INTEGER BSIC */
typedef U8 RRLP_BSIC;

/* ENUMERATED TimeSlotScheme */
typedef enum
{
   RRLP_TimeSlotScheme_equalLength,
   RRLP_TimeSlotScheme_variousLength
}
RRLP_TimeSlotScheme;

/* INTEGER ModuloTimeSlot */
typedef U8 RRLP_ModuloTimeSlot;

/* INTEGER MultiFrameOffset */
typedef U8 RRLP_MultiFrameOffset;

/* INTEGER RoughRTD */
typedef U16 RRLP_RoughRTD;

/* INTEGER FineRTD */
typedef U8 RRLP_FineRTD;

/* INTEGER RelDistance */
typedef S32 RRLP_RelDistance;

/* INTEGER RelativeAlt */
typedef S16 RRLP_RelativeAlt;

/* ENUMERATED ReferenceRelation */
typedef enum
{
   RRLP_ReferenceRelation_secondBTSThirdSet,
   RRLP_ReferenceRelation_secondBTSSecondSet,
   RRLP_ReferenceRelation_firstBTSFirstSet
}
RRLP_ReferenceRelation;

/* SEQUENCE BSICAndCarrier */
typedef struct RRLP_BSICAndCarrier
{
   RRLP_BCCHCarrier carrier; /* MANDATORY */
   RRLP_BSIC bsic; /* MANDATORY */
}
RRLP_BSICAndCarrier;

/* INTEGER RequestIndex */
typedef U8 RRLP_RequestIndex;

/* INTEGER SystemInfoIndex */
typedef U8 RRLP_SystemInfoIndex;

/* INTEGER CellID */
typedef U16 RRLP_CellID;

/* INTEGER LAC */
typedef U16 RRLP_LAC;

/* INTEGER RefQuality */
typedef U8 RRLP_RefQuality;

/* INTEGER NumOfMeasurements */
typedef U8 RRLP_NumOfMeasurements;

/* INTEGER StdResolution */
typedef U8 RRLP_StdResolution;

/* SEQUENCE EOTDQuality */
typedef struct RRLP_EOTDQuality
{
   U8 nbrOfMeasurements; /* MANDATORY */
   U8 stdOfEOTD; /* MANDATORY */
}
RRLP_EOTDQuality;

/* SEQUENCE MultiFrameCarrier */
typedef struct RRLP_MultiFrameCarrier
{
   RRLP_BCCHCarrier bcchCarrier; /* MANDATORY */
   RRLP_MultiFrameOffset multiFrameOffset; /* MANDATORY */
}
RRLP_MultiFrameCarrier;

/* INTEGER OTDValue */
typedef U16 RRLP_OTDValue;

/* INTEGER FixType */
typedef U8 RRLP_FixType;

/* INTEGER GPSTOW24b */
typedef U32 RRLP_GPSTOW24b;

/* ENUMERATED MpathIndic */
typedef enum
{
   RRLP_MpathIndic_notMeasured,
   RRLP_MpathIndic_low,
   RRLP_MpathIndic_medium,
   RRLP_MpathIndic_high
}
RRLP_MpathIndic;

/* ENUMERATED LocErrorReason */
typedef enum
{
   RRLP_LocErrorReason_unDefined,
   RRLP_LocErrorReason_notEnoughBTSs,
   RRLP_LocErrorReason_notEnoughSats,
   RRLP_LocErrorReason_eotdLocCalAssDataMissing,
   RRLP_LocErrorReason_eotdAssDataMissing,
   RRLP_LocErrorReason_gpsLocCalAssDataMissing,
   RRLP_LocErrorReason_gpsAssDataMissing,
   RRLP_LocErrorReason_methodNotSupported,
   RRLP_LocErrorReason_notProcessed,
   RRLP_LocErrorReason_refBTSForGPSNotServingBTS,
   RRLP_LocErrorReason_refBTSForEOTDNotServingBTS
    // ...
}
RRLP_LocErrorReason;

/* OCTET STRING GPSAssistanceData */
typedef struct RRLP_GPSAssistanceData
{
   U8 numOctets;
   U8 stringData[40];
}
RRLP_GPSAssistanceData;

#define RRLP_maxGPSAssistanceData 40
/* ENUMERATED ErrorCodes */
typedef enum
{
   RRLP_ErrorCodes_unDefined,
   RRLP_ErrorCodes_missingComponet,
   RRLP_ErrorCodes_incorrectData,
   RRLP_ErrorCodes_missingIEorComponentElement,
   RRLP_ErrorCodes_messageTooShort,
   RRLP_ErrorCodes_unknowReferenceNumber
    // ...
}
RRLP_ErrorCodes;

/* ENUMERATED MoreAssDataToBeSent */
typedef enum
{
   RRLP_MoreAssDataToBeSent_noMoreMessages,
   RRLP_MoreAssDataToBeSent_moreMessagesOnTheWay
}
RRLP_MoreAssDataToBeSent;

/* INTEGER GPSTOW23b */
typedef U32 RRLP_GPSTOW23b;

/* INTEGER GPSWeek */
typedef U16 RRLP_GPSWeek;

/* INTEGER TLMWord */
typedef U16 RRLP_TLMWord;

/* INTEGER AntiSpoofFlag */
typedef U8 RRLP_AntiSpoofFlag;

/* INTEGER AlertFlag */
typedef U8 RRLP_AlertFlag;

/* INTEGER TLMReservedBits */
typedef U8 RRLP_TLMReservedBits;

/* INTEGER FrameNumber */
typedef U32 RRLP_FrameNumber;

/* INTEGER TimeSlot */
typedef U8 RRLP_TimeSlot;

/* INTEGER BitNumber */
typedef U8 RRLP_BitNumber;

/* SEQUENCE RefLocation */
typedef struct RRLP_RefLocation
{
   RRLP_Ext_GeographicalInformation threeDLocation; /* MANDATORY */
}
RRLP_RefLocation;

/* INTEGER SatelliteID */
typedef U8 RRLP_SatelliteID;

/* SEQUENCE EphemerisSubframe1Reserved */
typedef struct RRLP_EphemerisSubframe1Reserved
{
   U32 reserved1; /* MANDATORY */
   U32 reserved2; /* MANDATORY */
   U32 reserved3; /* MANDATORY */
   U16 reserved4; /* MANDATORY */
}
RRLP_EphemerisSubframe1Reserved;

/* SEQUENCE IonosphericModel */
typedef struct RRLP_IonosphericModel
{
   S8 alfa0; /* MANDATORY */
   S8 alfa1; /* MANDATORY */
   S8 alfa2; /* MANDATORY */
   S8 alfa3; /* MANDATORY */
   S8 beta0; /* MANDATORY */
   S8 beta1; /* MANDATORY */
   S8 beta2; /* MANDATORY */
   S8 beta3; /* MANDATORY */
}
RRLP_IonosphericModel;

/* SEQUENCE UTCModel */
typedef struct RRLP_UTCModel
{
   S32 utcA1; /* MANDATORY */
   S32 utcA0; /* MANDATORY */
   U8 utcTot; /* MANDATORY */
   U8 utcWNt; /* MANDATORY */
   S8 utcDeltaTls; /* MANDATORY */
   U8 utcWNlsf; /* MANDATORY */
   S8 utcDN; /* MANDATORY */
   S8 utcDeltaTlsf; /* MANDATORY */
}
RRLP_UTCModel;

/* SEQUENCE AlmanacElement */
typedef struct RRLP_AlmanacElement
{
   RRLP_SatelliteID satelliteID; /* MANDATORY */
   U16 almanacE; /* MANDATORY */
   U8 alamanacToa; /* MANDATORY */
   S16 almanacKsii; /* MANDATORY */
   S16 almanacOmegaDot; /* MANDATORY */
   U8 almanacSVhealth; /* MANDATORY */
   U32 almanacAPowerHalf; /* MANDATORY */
   S32 almanacOmega0; /* MANDATORY */
   S32 almanacW; /* MANDATORY */
   S32 almanacM0; /* MANDATORY */
   S16 almanacAF0; /* MANDATORY */
   S16 almanacAF1; /* MANDATORY */
}
RRLP_AlmanacElement;

/* SEQUENCE AddionalDopplerFields */
typedef struct RRLP_AddionalDopplerFields
{
   U8 doppler1; /* MANDATORY */
   U8 dopplerUncertainty; /* MANDATORY */
}
RRLP_AddionalDopplerFields;

/* SEQUENCE AddionalAngleFields */
typedef struct RRLP_AddionalAngleFields
{
   U8 azimuth; /* MANDATORY */
   U8 elevation; /* MANDATORY */
}
RRLP_AddionalAngleFields;

/* SEQUENCE OF SeqOf-BadSatelliteSet */
typedef struct RRLP_SeqOf_BadSatelliteSet
{
   U8 numElements;

   RRLP_SatelliteID element[16];
}
RRLP_SeqOf_BadSatelliteSet;

/* INTEGER ExpectedOTD */
typedef U16 RRLP_ExpectedOTD;

/* INTEGER ExpOTDUncertainty */
typedef U8 RRLP_ExpOTDUncertainty;

/* INTEGER GPSReferenceTimeUncertainty */
typedef U8 RRLP_GPSReferenceTimeUncertainty;

/* SEQUENCE GPSTimeAssistanceMeasurements */
typedef struct RRLP_GPSTimeAssistanceMeasurements
{
   U8 validity;

   #define RRLP_GPSTimeAssistanceMeasurements_referenceFrameMSB_valid 0x08
   #define RRLP_GPSTimeAssistanceMeasurements_gpsTowSubms_valid 0x04
   #define RRLP_GPSTimeAssistanceMeasurements_deltaTow_valid 0x02
   #define RRLP_GPSTimeAssistanceMeasurements_gpsReferenceTimeUncertainty_valid 0x01

   U8 referenceFrameMSB; /* OPTIONAL */
   U16 gpsTowSubms; /* OPTIONAL */
   U8 deltaTow; /* OPTIONAL */
   RRLP_GPSReferenceTimeUncertainty gpsReferenceTimeUncertainty; /* OPTIONAL */
}
RRLP_GPSTimeAssistanceMeasurements;

/* Lanslo insert 20080115 */
#define          ExtensionSet_OSET 1         /* Class is MAP-EXTENSION */

typedef struct MAP_EXTENSION
{
    U8 				validity;

		#define		ExtensionType_valid		0x01
    unsigned short  ExtensionType;  /* optional; set in bit_mask
    																 * ExtensionType_present if present */
    applib_OID     	extensionId;
} MAP_EXTENSION;
/* eo Lanslo insert 20080115 */

/* Lanslo replace 20080115 */

typedef 	 struct 	RRLP_PrivateExtension
{
	U8 validity;

	#define		RRLP_PRIVATEEXTENSION_EXTTYPE_VALID	0x01

	applib_OID     	extId;
  void			*extType;  /* NULL for not present */
}RRLP_PrivateExtension;

/* eo Lanslo replace 20080115 */

/* SEQUENCE Extended-reference */
typedef struct RRLP_Extended_reference
{
   U8 smlc_code; /* MANDATORY */
   U32 transaction_ID; /* MANDATORY */
}
RRLP_Extended_reference;

/* ENUMERATED UlPseudoSegInd */
typedef enum
{
   RRLP_UlPseudoSegInd_firstOfMany,
   RRLP_UlPseudoSegInd_secondOfMany
}
RRLP_UlPseudoSegInd;

/* SEQUENCE Rel5-MsrPosition-Req-Extension */
typedef struct RRLP_Rel5_MsrPosition_Req_Extension
{
   RRLP_Extended_reference extended_reference; /* MANDATORY */


   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_Rel5_MsrPosition_Req_Extension;

/* SEQUENCE Rel5-AssistanceData-Extension */
typedef struct RRLP_Rel5_AssistanceData_Extension
{
   RRLP_Extended_reference extended_reference; /* MANDATORY */


   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_Rel5_AssistanceData_Extension;

/* SEQUENCE Rel-5-ProtocolError-Extension */
typedef struct RRLP_Rel_5_ProtocolError_Extension
{
   U8 validity;

   #define RRLP_Rel_5_ProtocolError_Extension_extended_reference_valid 0x01

   RRLP_Extended_reference extended_reference; /* OPTIONAL */


   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_Rel_5_ProtocolError_Extension;

#if 0
typedef 	 struct 	RRLP_PrivateExtension
{
		U8 empty;

}RRLP_PrivateExtension;
#endif

/* SEQUENCE OF PrivateExtensionList */
typedef struct RRLP_PrivateExtensionList
{
   U8 numElements;

   RRLP_PrivateExtension element[10];
}
RRLP_PrivateExtensionList;

/* SEQUENCE AccuracyOpt */
typedef struct RRLP_AccuracyOpt
{
   U8 validity;

   #define RRLP_AccuracyOpt_accuracy_valid 0x01

   RRLP_Accuracy accuracy; /* OPTIONAL */
}
RRLP_AccuracyOpt;

/* SEQUENCE ReferenceAssistData */
typedef struct RRLP_ReferenceAssistData
{
   U8 validity;

   #define RRLP_ReferenceAssistData_btsPosition_valid 0x01

   RRLP_BCCHCarrier bcchCarrier; /* MANDATORY */
   RRLP_BSIC bsic; /* MANDATORY */
   RRLP_TimeSlotScheme timeSlotScheme; /* MANDATORY */
   RRLP_BTSPosition btsPosition; /* OPTIONAL */
}
*RRLP_ReferenceAssistData;

/* SEQUENCE ReferenceWGS84 */
typedef struct RRLP_ReferenceWGS84
{
   U8 validity;

   #define RRLP_ReferenceWGS84_relativeAlt_valid 0x01

   RRLP_RelDistance relativeNorth; /* MANDATORY */
   RRLP_RelDistance relativeEast; /* MANDATORY */
   RRLP_RelativeAlt relativeAlt; /* OPTIONAL */
}
RRLP_ReferenceWGS84;

/* SEQUENCE MultipleSets */
typedef struct RRLP_MultipleSets
{
   U8 validity;

   #define RRLP_MultipleSets_referenceRelation_valid 0x01

   U8 nbrOfSets; /* MANDATORY */
   U8 nbrOfReferenceBTSs; /* MANDATORY */
   RRLP_ReferenceRelation referenceRelation; /* OPTIONAL */
}
RRLP_MultipleSets;

/* SEQUENCE CellIDAndLAC */
typedef struct RRLP_CellIDAndLAC
{
   RRLP_LAC referenceLAC; /* MANDATORY */
   RRLP_CellID referenceCI; /* MANDATORY */
}
RRLP_CellIDAndLAC;

/* SEQUENCE TOA-MeasurementsOfRef */
typedef struct RRLP_TOA_MeasurementsOfRef
{
   RRLP_RefQuality refQuality; /* MANDATORY */
   RRLP_NumOfMeasurements numOfMeasurements; /* MANDATORY */
}
RRLP_TOA_MeasurementsOfRef;

/* SEQUENCE OTD-Measurement */
typedef struct RRLP_OTD_Measurement
{
   RRLP_ModuloTimeSlot nborTimeSlot; /* MANDATORY */
   RRLP_EOTDQuality eotdQuality; /* MANDATORY */
   RRLP_OTDValue otdValue; /* MANDATORY */
}
RRLP_OTD_Measurement;

/* CHOICE NeighborIdentity */
typedef enum
{
   RRLP_NeighborIdentity_bsicAndCarrier_selected = 1,
   RRLP_NeighborIdentity_ci_selected,
   RRLP_NeighborIdentity_multiFrameCarrier_selected,
   RRLP_NeighborIdentity_requestIndex_selected,
   RRLP_NeighborIdentity_systemInfoIndex_selected,
   RRLP_NeighborIdentity_ciAndLAC_selected
}
RRLP_NeighborIdentity_selector;

typedef struct RRLP_NeighborIdentity
{
   RRLP_NeighborIdentity_selector selection;

   union
   {
      RRLP_BSICAndCarrier bsicAndCarrier;
      RRLP_CellID ci;
      RRLP_MultiFrameCarrier multiFrameCarrier;
      RRLP_RequestIndex requestIndex;
      RRLP_SystemInfoIndex systemInfoIndex;
      RRLP_CellIDAndLAC ciAndLAC;
   }
   choice;
}
RRLP_NeighborIdentity;

/* SEQUENCE LocationInfo */
typedef struct RRLP_LocationInfo
{
   U8 validity;

   #define RRLP_LocationInfo_gpsTOW_valid 0x01

   U16 refFrame; /* MANDATORY */
   U32 gpsTOW; /* OPTIONAL */
   RRLP_FixType fixType; /* MANDATORY */
   RRLP_Ext_GeographicalInformation posEstimate; /* MANDATORY */
}
RRLP_LocationInfo;

/* SEQUENCE GPS-MsrElement */
typedef struct RRLP_GPS_MsrElement
{
   RRLP_SatelliteID satelliteID; /* MANDATORY */
   U8 cNo; /* MANDATORY */
   S16 doppler; /* MANDATORY */
   U16 wholeChips; /* MANDATORY */
   U16 fracChips; /* MANDATORY */
   RRLP_MpathIndic mpathIndic; /* MANDATORY */
   U8 pseuRangeRMSErr; /* MANDATORY */
}
RRLP_GPS_MsrElement;

/* SEQUENCE GPSTime */
typedef struct RRLP_GPSTime
{
   RRLP_GPSTOW23b gpsTOW23b; /* MANDATORY */
   RRLP_GPSWeek gpsWeek; /* MANDATORY */
}
RRLP_GPSTime;

/* SEQUENCE GPSTOWAssistElement */
typedef struct RRLP_GPSTOWAssistElement
{
   RRLP_SatelliteID satelliteID; /* MANDATORY */
   RRLP_TLMWord tlmWord; /* MANDATORY */
   RRLP_AntiSpoofFlag antiSpoof; /* MANDATORY */
   RRLP_AlertFlag alert; /* MANDATORY */
   RRLP_TLMReservedBits tlmRsvdBits; /* MANDATORY */
}
RRLP_GPSTOWAssistElement;

/* SEQUENCE GSMTime */
typedef struct RRLP_GSMTime
{
   RRLP_BCCHCarrier bcchCarrier; /* MANDATORY */
   RRLP_BSIC bsic; /* MANDATORY */
   RRLP_FrameNumber frameNumber; /* MANDATORY */
   RRLP_TimeSlot timeSlot; /* MANDATORY */
   RRLP_BitNumber bitNumber; /* MANDATORY */
}
RRLP_GSMTime;

/* SEQUENCE SatElement */
typedef struct RRLP_SatElement
{
   RRLP_SatelliteID satelliteID; /* MANDATORY */
   U8 iode; /* MANDATORY */
   U8 udre; /* MANDATORY */
   S16 pseudoRangeCor; /* MANDATORY */
   S8 rangeRateCor; /* MANDATORY */
   S8 deltaPseudoRangeCor2; /* MANDATORY */
   S8 deltaRangeRateCor2; /* MANDATORY */
   S8 deltaPseudoRangeCor3; /* MANDATORY */
   S8 deltaRangeRateCor3; /* MANDATORY */
}
RRLP_SatElement;

/* SEQUENCE UncompressedEphemeris */
typedef struct RRLP_UncompressedEphemeris
{
   U8 ephemCodeOnL2; /* MANDATORY */
   U8 ephemURA; /* MANDATORY */
   U8 ephemSVhealth; /* MANDATORY */
   U16 ephemIODC; /* MANDATORY */
   U8 ephemL2Pflag; /* MANDATORY */
   RRLP_EphemerisSubframe1Reserved ephemSF1Rsvd; /* MANDATORY */
   S8 ephemTgd; /* MANDATORY */
   U16 ephemToc; /* MANDATORY */
   S8 ephemAF2; /* MANDATORY */
   S16 ephemAF1; /* MANDATORY */
   S32 ephemAF0; /* MANDATORY */
   S16 ephemCrs; /* MANDATORY */
   S16 ephemDeltaN; /* MANDATORY */
   S32 ephemM0; /* MANDATORY */
   S16 ephemCuc; /* MANDATORY */
   U32 ephemE; /* MANDATORY */
   S16 ephemCus; /* MANDATORY */
   U32 ephemAPowerHalf; /* MANDATORY */
   U16 ephemToe; /* MANDATORY */
   U8 ephemFitFlag; /* MANDATORY */
   U8 ephemAODA; /* MANDATORY */
   S16 ephemCic; /* MANDATORY */
   S32 ephemOmegaA0; /* MANDATORY */
   S16 ephemCis; /* MANDATORY */
   S32 ephemI0; /* MANDATORY */
   S16 ephemCrc; /* MANDATORY */
   S32 ephemW; /* MANDATORY */
   S32 ephemOmegaADot; /* MANDATORY */
   S16 ephemIDot; /* MANDATORY */
}
RRLP_UncompressedEphemeris;

/* SEQUENCE OF SeqOfAlmanacElement */
typedef struct RRLP_SeqOfAlmanacElement
{
   U8 numElements;

   RRLP_AlmanacElement element[64];
}
RRLP_SeqOfAlmanacElement;

/* SEQUENCE TimeRelation */
typedef struct RRLP_TimeRelation
{
   U8 validity;

   #define RRLP_TimeRelation_gsmTime_valid 0x01

   RRLP_GPSTOW23b gpsTOW; /* MANDATORY */
   RRLP_GSMTime gsmTime; /* OPTIONAL */
}
RRLP_TimeRelation;

/* SEQUENCE AcquisElement */
typedef struct RRLP_AcquisElement
{
   U8 validity;

   #define RRLP_AcquisElement_addionalDoppler_valid 0x02
   #define RRLP_AcquisElement_addionalAngle_valid 0x01

   RRLP_SatelliteID svid; /* MANDATORY */
   S16 doppler0; /* MANDATORY */
   RRLP_AddionalDopplerFields addionalDoppler; /* OPTIONAL */
   U16 codePhase; /* MANDATORY */
   U8 intCodePhase; /* MANDATORY */
   U8 gpsBitNumber; /* MANDATORY */
   U8 codePhaseSearchWindow; /* MANDATORY */
   RRLP_AddionalAngleFields addionalAngle; /* OPTIONAL */
}
RRLP_AcquisElement;

/* SEQUENCE MsrAssistBTS-R98-ExpOTD */
typedef struct RRLP_MsrAssistBTS_R98_ExpOTD
{
   RRLP_ExpectedOTD expectedOTD; /* MANDATORY */
   RRLP_ExpOTDUncertainty expOTDUncertainty; /* MANDATORY */
}
RRLP_MsrAssistBTS_R98_ExpOTD;

/* SEQUENCE AssistBTSData-R98-ExpOTD */
typedef struct RRLP_AssistBTSData_R98_ExpOTD
{
   RRLP_ExpectedOTD expectedOTD; /* MANDATORY */
   RRLP_ExpOTDUncertainty expOTDuncertainty; /* MANDATORY */
}
RRLP_AssistBTSData_R98_ExpOTD;

/* SEQUENCE ExtensionContainer */
typedef struct RRLP_ExtensionContainer
{
   U8 validity;

   #define RRLP_ExtensionContainer_privateExtensionList_valid 0x02
   #define RRLP_ExtensionContainer_pcs_Extensions_valid 0x01

   RRLP_PrivateExtensionList privateExtensionList; /* OPTIONAL */
   RRLP_PCS_Extensions pcs_Extensions; /* OPTIONAL */


   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_ExtensionContainer;

/* SEQUENCE ProtocolError */
typedef struct RRLP_ProtocolError
{
   U8 validity;

   #define RRLP_ProtocolError_extensionContainer_valid 0x02
   #define RRLP_ProtocolError_rel_5_ProtocolError_Extension_valid 0x01

   RRLP_ErrorCodes errorCause; /* MANDATORY */
   RRLP_ExtensionContainer extensionContainer; /* OPTIONAL */

   RRLP_Rel_5_ProtocolError_Extension rel_5_ProtocolError_Extension; /* OPTIONAL */

   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_ProtocolError;

/* CHOICE MethodType */
typedef enum
{
   RRLP_MethodType_msAssisted_selected = 1,
   RRLP_MethodType_msBased_selected,
   RRLP_MethodType_msBasedPref_selected,
   RRLP_MethodType_msAssistedPref_selected
}
RRLP_MethodType_selector;

typedef struct RRLP_MethodType
{
   RRLP_MethodType_selector selection;

   union
   {
      RRLP_AccuracyOpt msAssisted;
      RRLP_Accuracy msBased;
      RRLP_Accuracy msBasedPref;
      RRLP_Accuracy msAssistedPref;
   }
   choice;
}
RRLP_MethodType;

/* SEQUENCE CalcAssistanceBTS */
typedef struct RRLP_CalcAssistanceBTS
{
   RRLP_FineRTD fineRTD; /* MANDATORY */
   RRLP_ReferenceWGS84 referenceWGS84; /* MANDATORY */
}
RRLP_CalcAssistanceBTS;

/* CHOICE ReferenceIdentityType */
typedef enum
{
   RRLP_ReferenceIdentityType_bsicAndCarrier_selected = 1,
   RRLP_ReferenceIdentityType_ci_selected,
   RRLP_ReferenceIdentityType_requestIndex_selected,
   RRLP_ReferenceIdentityType_systemInfoIndex_selected,
   RRLP_ReferenceIdentityType_ciAndLAC_selected
}
RRLP_ReferenceIdentityType_selector;

typedef struct RRLP_ReferenceIdentityType
{
   RRLP_ReferenceIdentityType_selector selection;

   union
   {
      RRLP_BSICAndCarrier bsicAndCarrier;
      RRLP_CellID ci;
      RRLP_RequestIndex requestIndex;
      RRLP_SystemInfoIndex systemInfoIndex;
      RRLP_CellIDAndLAC ciAndLAC;
   }
   choice;
}
RRLP_ReferenceIdentityType;

/* SEQUENCE OTD-MeasurementWithID */
typedef struct RRLP_OTD_MeasurementWithID
{
   RRLP_NeighborIdentity neighborIdentity; /* MANDATORY */
   RRLP_ModuloTimeSlot nborTimeSlot; /* MANDATORY */
   RRLP_EOTDQuality eotdQuality; /* MANDATORY */
   RRLP_OTDValue otdValue; /* MANDATORY */
}
RRLP_OTD_MeasurementWithID;

/* SEQUENCE OF SeqOfGPS-MsrElement */
typedef struct RRLP_SeqOfGPS_MsrElement
{
   U8 numElements;

   RRLP_GPS_MsrElement element[16];
}
RRLP_SeqOfGPS_MsrElement;

/* SEQUENCE AdditionalAssistanceData */
typedef struct RRLP_AdditionalAssistanceData
{
   U8 validity;

   #define RRLP_AdditionalAssistanceData_gpsAssistanceData_valid 0x02
   #define RRLP_AdditionalAssistanceData_extensionContainer_valid 0x01

   RRLP_GPSAssistanceData gpsAssistanceData; /* OPTIONAL */
   RRLP_ExtensionContainer extensionContainer; /* OPTIONAL */


   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_AdditionalAssistanceData;

/* SEQUENCE OF GPSTOWAssist */
typedef struct RRLP_GPSTOWAssist
{
   U8 numElements;

   RRLP_GPSTOWAssistElement element[12];
}
RRLP_GPSTOWAssist;

/* SEQUENCE OF SeqOfSatElement */
typedef struct RRLP_SeqOfSatElement
{
   U8 numElements;

   RRLP_SatElement element[16];
}
RRLP_SeqOfSatElement;

/* CHOICE SatStatus */
typedef enum
{
   RRLP_SatStatus_newSatelliteAndModelUC_selected = 1,
   RRLP_SatStatus_oldSatelliteAndModel_selected,
   RRLP_SatStatus_newNaviModelUC_selected,
   RRLP_SatStatus_UnKnowItem_selected
}
RRLP_SatStatus_selector;

typedef struct RRLP_SatStatus
{
   RRLP_SatStatus_selector selection;

   union
   {
      RRLP_UncompressedEphemeris newSatelliteAndModelUC;
      AsnNull oldSatelliteAndModel;
      RRLP_UncompressedEphemeris newNaviModelUC;
   applib_ChoiceUnKnow	UnKnowItem;
   }
   choice;
}
RRLP_SatStatus;

/* SEQUENCE Almanac */
typedef struct RRLP_Almanac
{
   U8 alamanacWNa; /* MANDATORY */
   RRLP_SeqOfAlmanacElement almanacList; /* MANDATORY */
}
RRLP_Almanac;

/* SEQUENCE OF SeqOfAcquisElement */
typedef struct RRLP_SeqOfAcquisElement
{
   U8 numElements;

   RRLP_AcquisElement element[16];
}
RRLP_SeqOfAcquisElement;

/* SEQUENCE OF SeqOfMsrAssistBTS-R98-ExpOTD */
typedef struct RRLP_SeqOfMsrAssistBTS_R98_ExpOTD
{
   U8 numElements;

   RRLP_MsrAssistBTS_R98_ExpOTD element[15];
}
RRLP_SeqOfMsrAssistBTS_R98_ExpOTD;

/* CHOICE SystemInfoAssistBTS-R98-ExpOTD */
typedef enum
{
   RRLP_SystemInfoAssistBTS_R98_ExpOTD_notPresent_selected = 1,
   RRLP_SystemInfoAssistBTS_R98_ExpOTD_present_selected
}
RRLP_SystemInfoAssistBTS_R98_ExpOTD_selector;

typedef struct RRLP_SystemInfoAssistBTS_R98_ExpOTD
{
   RRLP_SystemInfoAssistBTS_R98_ExpOTD_selector selection;

   union
   {
      AsnNull notPresent;
      RRLP_AssistBTSData_R98_ExpOTD present;
   }
   choice;
}
RRLP_SystemInfoAssistBTS_R98_ExpOTD;

/* SEQUENCE PositionInstruct */
typedef struct RRLP_PositionInstruct
{
   U8 validity;

   #define RRLP_PositionInstruct_environmentCharacter_valid 0x01

   RRLP_MethodType methodType; /* MANDATORY */
   RRLP_PositionMethod positionMethod; /* MANDATORY */
   RRLP_MeasureResponseTime measureResponseTime; /* MANDATORY */
   RRLP_UseMultipleSets useMultipleSets; /* MANDATORY */
   RRLP_EnvironmentCharacter environmentCharacter; /* OPTIONAL */
}
RRLP_PositionInstruct;

/* SEQUENCE MsrAssistBTS */
typedef struct RRLP_MsrAssistBTS
{
   U8 validity;

   #define RRLP_MsrAssistBTS_calcAssistanceBTS_valid 0x01

   RRLP_BCCHCarrier bcchCarrier; /* MANDATORY */
   RRLP_BSIC bsic; /* MANDATORY */
   RRLP_MultiFrameOffset multiFrameOffset; /* MANDATORY */
   RRLP_TimeSlotScheme timeSlotScheme; /* MANDATORY */
   RRLP_RoughRTD roughRTD; /* MANDATORY */
   RRLP_CalcAssistanceBTS calcAssistanceBTS; /* OPTIONAL */
}
RRLP_MsrAssistBTS;

/* SEQUENCE AssistBTSData */
typedef struct RRLP_AssistBTSData
{
   U8 validity;

   #define RRLP_AssistBTSData_calcAssistanceBTS_valid 0x01

   RRLP_BSIC bsic; /* MANDATORY */
   RRLP_MultiFrameOffset multiFrameOffset; /* MANDATORY */
   RRLP_TimeSlotScheme timeSlotScheme; /* MANDATORY */
   RRLP_RoughRTD roughRTD; /* MANDATORY */
   RRLP_CalcAssistanceBTS calcAssistanceBTS; /* OPTIONAL */
}
RRLP_AssistBTSData;

/* SEQUENCE OF SeqOfReferenceIdentityType */
typedef struct RRLP_SeqOfReferenceIdentityType
{
   U8 numElements;

   RRLP_ReferenceIdentityType element[3];
}
RRLP_SeqOfReferenceIdentityType;

/* DEFINED OTD-FirstSetMsrs */
typedef RRLP_OTD_MeasurementWithID RRLP_OTD_FirstSetMsrs;

/* CHOICE OTD-MsrsOfOtherSets */
typedef enum
{
   RRLP_OTD_MsrsOfOtherSets_identityNotPresent_selected = 1,
   RRLP_OTD_MsrsOfOtherSets_identityPresent_selected
}
RRLP_OTD_MsrsOfOtherSets_selector;

typedef struct RRLP_OTD_MsrsOfOtherSets
{
   RRLP_OTD_MsrsOfOtherSets_selector selection;

   union
   {
      RRLP_OTD_Measurement identityNotPresent;
      RRLP_OTD_MeasurementWithID identityPresent;
   }
   choice;
}
RRLP_OTD_MsrsOfOtherSets;

/* SEQUENCE GPS-MsrSetElement */
typedef struct RRLP_GPS_MsrSetElement
{
   U8 validity;

   #define RRLP_GPS_MsrSetElement_refFrame_valid 0x01

   U16 refFrame; /* OPTIONAL */
   RRLP_GPSTOW24b gpsTOW; /* MANDATORY */
   RRLP_SeqOfGPS_MsrElement gps_msrList; /* MANDATORY */
}
RRLP_GPS_MsrSetElement;

/* SEQUENCE LocationError */
typedef struct RRLP_LocationError
{
   U8 validity;

   #define RRLP_LocationError_additionalAssistanceData_valid 0x01

   RRLP_LocErrorReason locErrorReason; /* MANDATORY */
   RRLP_AdditionalAssistanceData additionalAssistanceData; /* OPTIONAL */


   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_LocationError;

/* SEQUENCE ReferenceTime */
typedef struct RRLP_ReferenceTime
{
   U8 validity;

   #define RRLP_ReferenceTime_gsmTime_valid 0x02
   #define RRLP_ReferenceTime_gpsTowAssist_valid 0x01

   RRLP_GPSTime gpsTime; /* MANDATORY */
   RRLP_GSMTime gsmTime; /* OPTIONAL */
   RRLP_GPSTOWAssist gpsTowAssist; /* OPTIONAL */
}
RRLP_ReferenceTime;

/* SEQUENCE DGPSCorrections */
typedef struct RRLP_DGPSCorrections
{
   U32 gpsTOW; /* MANDATORY */
   U8 status; /* MANDATORY */
   RRLP_SeqOfSatElement satList; /* MANDATORY */
}
RRLP_DGPSCorrections;

/* SEQUENCE NavModelElement */
typedef struct RRLP_NavModelElement
{
   RRLP_SatelliteID satelliteID; /* MANDATORY */
   RRLP_SatStatus satStatus; /* MANDATORY */
}
RRLP_NavModelElement;

/* SEQUENCE AcquisAssist */
typedef struct RRLP_AcquisAssist
{
   RRLP_TimeRelation timeRelation; /* MANDATORY */
   RRLP_SeqOfAcquisElement acquisList; /* MANDATORY */
}
RRLP_AcquisAssist;

/* SEQUENCE MsrAssistData-R98-ExpOTD */
typedef struct RRLP_MsrAssistData_R98_ExpOTD
{
   RRLP_SeqOfMsrAssistBTS_R98_ExpOTD msrAssistList_R98_ExpOTD; /* MANDATORY */
}
RRLP_MsrAssistData_R98_ExpOTD;

/* SEQUENCE OF SeqOfSystemInfoAssistBTS-R98-ExpOTD */
typedef struct RRLP_SeqOfSystemInfoAssistBTS_R98_ExpOTD
{
   U8 numElements;

   RRLP_SystemInfoAssistBTS_R98_ExpOTD element[32];
}
RRLP_SeqOfSystemInfoAssistBTS_R98_ExpOTD;

/* SEQUENCE OF SeqOfOTD-FirstSetMsrs-R98-Ext */
typedef struct RRLP_SeqOfOTD_FirstSetMsrs_R98_Ext
{
   U8 numElements;

   RRLP_OTD_FirstSetMsrs element[5];
}
RRLP_SeqOfOTD_FirstSetMsrs_R98_Ext;

/* SEQUENCE OF SeqOfMsrAssistBTS */
typedef struct RRLP_SeqOfMsrAssistBTS
{
   U8 numElements;

   RRLP_MsrAssistBTS element[15];
}
RRLP_SeqOfMsrAssistBTS;

/* CHOICE SystemInfoAssistBTS */
typedef enum
{
   RRLP_SystemInfoAssistBTS_notPresent_selected = 1,
   RRLP_SystemInfoAssistBTS_present_selected
}
RRLP_SystemInfoAssistBTS_selector;

typedef struct RRLP_SystemInfoAssistBTS
{
   RRLP_SystemInfoAssistBTS_selector selection;

   union
   {
      AsnNull notPresent;
      RRLP_AssistBTSData present;
   }
   choice;
}
RRLP_SystemInfoAssistBTS;

/* SEQUENCE ReferenceIdentity */
typedef struct RRLP_ReferenceIdentity
{
   RRLP_SeqOfReferenceIdentityType refBTSList; /* MANDATORY */
}
RRLP_ReferenceIdentity;

/* SEQUENCE OF SeqOfOTD-FirstSetMsrs */
typedef struct RRLP_SeqOfOTD_FirstSetMsrs
{
   U8 numElements;

   RRLP_OTD_FirstSetMsrs element[10];
}
RRLP_SeqOfOTD_FirstSetMsrs;

/* SEQUENCE OF SeqOfOTD-MsrsOfOtherSets */
typedef struct RRLP_SeqOfOTD_MsrsOfOtherSets
{
   U8 numElements;

   RRLP_OTD_MsrsOfOtherSets element[10];
}
RRLP_SeqOfOTD_MsrsOfOtherSets;

/* SEQUENCE OF SeqOfGPS-MsrSetElement */
typedef struct RRLP_SeqOfGPS_MsrSetElement
{
   U8 numElements;

   RRLP_GPS_MsrSetElement element[3];
}
RRLP_SeqOfGPS_MsrSetElement;

/* SEQUENCE OF SeqOfNavModelElement */
typedef struct RRLP_SeqOfNavModelElement
{
   U8 numElements;

   RRLP_NavModelElement element[16];
}
RRLP_SeqOfNavModelElement;

/* SEQUENCE SystemInfoAssistData-R98-ExpOTD */
typedef struct RRLP_SystemInfoAssistData_R98_ExpOTD
{
   RRLP_SeqOfSystemInfoAssistBTS_R98_ExpOTD systemInfoAssistListR98_ExpOTD; /* MANDATORY */
}
RRLP_SystemInfoAssistData_R98_ExpOTD;

/* SEQUENCE OTD-MsrElementFirst-R98-Ext */
typedef struct RRLP_OTD_MsrElementFirst_R98_Ext
{
   U8 validity;

   #define RRLP_OTD_MsrElementFirst_R98_Ext_otd_FirstSetMsrs_R98_Ext_valid 0x01

   RRLP_SeqOfOTD_FirstSetMsrs_R98_Ext otd_FirstSetMsrs_R98_Ext; /* OPTIONAL */
}
RRLP_OTD_MsrElementFirst_R98_Ext;

/* SEQUENCE MsrAssistData */
typedef struct RRLP_MsrAssistData
{
   RRLP_SeqOfMsrAssistBTS msrAssistList; /* MANDATORY */
}
*RRLP_MsrAssistData;

/* SEQUENCE OF SeqOfSystemInfoAssistBTS */
typedef struct RRLP_SeqOfSystemInfoAssistBTS
{
   U8 numElements;

   RRLP_SystemInfoAssistBTS element[32];
}
RRLP_SeqOfSystemInfoAssistBTS;

/* SEQUENCE OTD-MsrElementFirst */
typedef struct RRLP_OTD_MsrElementFirst
{
   U8 validity;

   #define RRLP_OTD_MsrElementFirst_toaMeasurementsOfRef_valid 0x04
   #define RRLP_OTD_MsrElementFirst_taCorrection_valid 0x02
   #define RRLP_OTD_MsrElementFirst_otd_FirstSetMsrs_valid 0x01

   U16 refFrameNumber; /* MANDATORY */
   RRLP_ModuloTimeSlot referenceTimeSlot; /* MANDATORY */
   RRLP_TOA_MeasurementsOfRef toaMeasurementsOfRef; /* OPTIONAL */
   RRLP_StdResolution stdResolution; /* MANDATORY */
   U16 taCorrection; /* OPTIONAL */
   RRLP_SeqOfOTD_FirstSetMsrs otd_FirstSetMsrs; /* OPTIONAL */
}
RRLP_OTD_MsrElementFirst;

/* SEQUENCE OTD-MsrElementRest */
typedef struct RRLP_OTD_MsrElementRest
{
   U8 validity;

   #define RRLP_OTD_MsrElementRest_toaMeasurementsOfRef_valid 0x04
   #define RRLP_OTD_MsrElementRest_taCorrection_valid 0x02
   #define RRLP_OTD_MsrElementRest_otd_MsrsOfOtherSets_valid 0x01

   U16 refFrameNumber; /* MANDATORY */
   RRLP_ModuloTimeSlot referenceTimeSlot; /* MANDATORY */
   RRLP_TOA_MeasurementsOfRef toaMeasurementsOfRef; /* OPTIONAL */
   RRLP_StdResolution stdResolution; /* MANDATORY */
   U16 taCorrection; /* OPTIONAL */
   RRLP_SeqOfOTD_MsrsOfOtherSets otd_MsrsOfOtherSets; /* OPTIONAL */
}
RRLP_OTD_MsrElementRest;

/* SEQUENCE GPS-MeasureInfo */
typedef struct RRLP_GPS_MeasureInfo
{
   RRLP_SeqOfGPS_MsrSetElement gpsMsrSetList; /* MANDATORY */
}
RRLP_GPS_MeasureInfo;

/* SEQUENCE NavigationModel */
typedef struct RRLP_NavigationModel
{
   RRLP_SeqOfNavModelElement navModelList; /* MANDATORY */
}
RRLP_NavigationModel;

/* SEQUENCE Rel98-Ext-ExpOTD */
typedef struct RRLP_Rel98_Ext_ExpOTD
{
   U8 validity;

   #define RRLP_Rel98_Ext_ExpOTD_msrAssistData_R98_ExpOTD_valid 0x02
   #define RRLP_Rel98_Ext_ExpOTD_systemInfoAssistData_R98_ExpOTD_valid 0x01

   RRLP_MsrAssistData_R98_ExpOTD msrAssistData_R98_ExpOTD; /* OPTIONAL */
   RRLP_SystemInfoAssistData_R98_ExpOTD systemInfoAssistData_R98_ExpOTD; /* OPTIONAL */
}
RRLP_Rel98_Ext_ExpOTD;

/* SEQUENCE OTD-MeasureInfo-R98-Ext */
typedef struct RRLP_OTD_MeasureInfo_R98_Ext
{
   RRLP_OTD_MsrElementFirst_R98_Ext otdMsrFirstSets_R98_Ext; /* MANDATORY */
}
RRLP_OTD_MeasureInfo_R98_Ext;

/* SEQUENCE SystemInfoAssistData */
typedef struct RRLP_SystemInfoAssistData
{
   RRLP_SeqOfSystemInfoAssistBTS systemInfoAssistList; /* MANDATORY */
}
*RRLP_SystemInfoAssistData;

/* SEQUENCE OF SeqOfOTD-MsrElementRest */
typedef struct RRLP_SeqOfOTD_MsrElementRest
{
   U8 numElements;

   RRLP_OTD_MsrElementRest element[2];
}
RRLP_SeqOfOTD_MsrElementRest;

/* SEQUENCE ControlHeader */
typedef struct RRLP_ControlHeader
{
   U16 validity;

   #define RRLP_ControlHeader_referenceTime_valid 0x0100
   #define RRLP_ControlHeader_refLocation_valid 0x0080
   #define RRLP_ControlHeader_dgpsCorrections_valid 0x0040
   #define RRLP_ControlHeader_navigationModel_valid 0x0020
   #define RRLP_ControlHeader_ionosphericModel_valid 0x0010
   #define RRLP_ControlHeader_utcModel_valid 0x0008
   #define RRLP_ControlHeader_almanac_valid 0x0004
   #define RRLP_ControlHeader_acquisAssist_valid 0x0002
   #define RRLP_ControlHeader_realTimeIntegrity_valid 0x0001

   RRLP_ReferenceTime referenceTime; /* OPTIONAL */
   RRLP_RefLocation refLocation; /* OPTIONAL */
   RRLP_DGPSCorrections dgpsCorrections; /* OPTIONAL */
   RRLP_NavigationModel navigationModel; /* OPTIONAL */
   RRLP_IonosphericModel ionosphericModel; /* OPTIONAL */
   RRLP_UTCModel utcModel; /* OPTIONAL */
   RRLP_Almanac almanac; /* OPTIONAL */
   RRLP_AcquisAssist acquisAssist; /* OPTIONAL */
   RRLP_SeqOf_BadSatelliteSet realTimeIntegrity; /* OPTIONAL */
}
RRLP_ControlHeader;

/* SEQUENCE Rel98-MsrPosition-Req-Extension */
typedef struct RRLP_Rel98_MsrPosition_Req_Extension
{
   U8 validity;

   #define RRLP_Rel98_MsrPosition_Req_Extension_rel98_Ext_ExpOTD_valid 0x04
   #define RRLP_Rel98_MsrPosition_Req_Extension_gpsTimeAssistanceMeasurementRequest_valid 0x02
   #define RRLP_Rel98_MsrPosition_Req_Extension_gpsReferenceTimeUncertainty_valid 0x01

   RRLP_Rel98_Ext_ExpOTD rel98_Ext_ExpOTD; /* OPTIONAL */

   AsnNull gpsTimeAssistanceMeasurementRequest; /* OPTIONAL */
   RRLP_GPSReferenceTimeUncertainty gpsReferenceTimeUncertainty; /* OPTIONAL */

   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_Rel98_MsrPosition_Req_Extension;

/* SEQUENCE Rel98-AssistanceData-Extension */
typedef struct RRLP_Rel98_AssistanceData_Extension
{
   U8 validity;

   #define RRLP_Rel98_AssistanceData_Extension_rel98_Ext_ExpOTD_valid 0x04
   #define RRLP_Rel98_AssistanceData_Extension_gpsTimeAssistanceMeasurementRequest_valid 0x02
   #define RRLP_Rel98_AssistanceData_Extension_gpsReferenceTimeUncertainty_valid 0x01

   RRLP_Rel98_Ext_ExpOTD rel98_Ext_ExpOTD; /* OPTIONAL */

   AsnNull gpsTimeAssistanceMeasurementRequest; /* OPTIONAL */
   RRLP_GPSReferenceTimeUncertainty gpsReferenceTimeUncertainty; /* OPTIONAL */

   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_Rel98_AssistanceData_Extension;

/* SEQUENCE Rel-98-MsrPosition-Rsp-Extension-rel-98-Ext-MeasureInfo */
typedef struct RRLP_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo
{
   U8 validity;

   #define RRLP_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo_otd_MeasureInfo_R98_Ext_valid 0x01

   RRLP_OTD_MeasureInfo_R98_Ext otd_MeasureInfo_R98_Ext; /* OPTIONAL */
}
RRLP_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo;

/* SEQUENCE Rel-98-MsrPosition-Rsp-Extension */
typedef struct RRLP_Rel_98_MsrPosition_Rsp_Extension
{
   U8 validity;

   #define RRLP_Rel_98_MsrPosition_Rsp_Extension_timeAssistanceMeasurements_valid 0x01

   RRLP_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo rel_98_Ext_MeasureInfo; /* MANDATORY */

   RRLP_GPSTimeAssistanceMeasurements timeAssistanceMeasurements; /* OPTIONAL */

   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_Rel_98_MsrPosition_Rsp_Extension;

/* DEFINED OTD-MeasureInfo-5-Ext */
typedef RRLP_SeqOfOTD_MsrElementRest RRLP_OTD_MeasureInfo_5_Ext;

/* SEQUENCE OTD-MeasureInfo */
typedef struct RRLP_OTD_MeasureInfo
{
   U8 validity;

   #define RRLP_OTD_MeasureInfo_otdMsrRestSets_valid 0x01

   RRLP_OTD_MsrElementFirst otdMsrFirstSets; /* MANDATORY */
   RRLP_SeqOfOTD_MsrElementRest otdMsrRestSets; /* OPTIONAL */
}
*RRLP_OTD_MeasureInfo;

/* SEQUENCE GPS-AssistData */
typedef struct RRLP_GPS_AssistData
{
   RRLP_ControlHeader controlHeader; /* MANDATORY */
}
RRLP_GPS_AssistData;

/* SEQUENCE Rel-5-MsrPosition-Rsp-Extension */
typedef struct RRLP_Rel_5_MsrPosition_Rsp_Extension
{
   U8 validity;

   #define RRLP_Rel_5_MsrPosition_Rsp_Extension_extended_reference_valid 0x04
   #define RRLP_Rel_5_MsrPosition_Rsp_Extension_otd_MeasureInfo_5_Ext_valid 0x02
   #define RRLP_Rel_5_MsrPosition_Rsp_Extension_ulPseudoSegInd_valid 0x01

   RRLP_Extended_reference extended_reference; /* OPTIONAL */
   RRLP_OTD_MeasureInfo_5_Ext otd_MeasureInfo_5_Ext; /* OPTIONAL */
   RRLP_UlPseudoSegInd ulPseudoSegInd; /* OPTIONAL */


   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_Rel_5_MsrPosition_Rsp_Extension;

/* SEQUENCE MsrPosition-Req */
typedef struct RRLP_MsrPosition_Req
{
   U8 validity;

   #define RRLP_MsrPosition_Req_referenceAssistData_valid 0x40
   #define RRLP_MsrPosition_Req_msrAssistData_valid 0x20
   #define RRLP_MsrPosition_Req_systemInfoAssistData_valid 0x10
   #define RRLP_MsrPosition_Req_gps_AssistData_valid 0x08
   #define RRLP_MsrPosition_Req_extensionContainer_valid 0x04
   #define RRLP_MsrPosition_Req_rel98_MsrPosition_Req_extension_valid 0x02
   #define RRLP_MsrPosition_Req_rel5_MsrPosition_Req_extension_valid 0x01

   RRLP_PositionInstruct positionInstruct; /* MANDATORY */
   RRLP_ReferenceAssistData referenceAssistData; /* OPTIONAL */
   RRLP_MsrAssistData msrAssistData; /* OPTIONAL */
   RRLP_SystemInfoAssistData systemInfoAssistData; /* OPTIONAL */
   RRLP_GPS_AssistData gps_AssistData; /* OPTIONAL */
   RRLP_ExtensionContainer extensionContainer; /* OPTIONAL */

   RRLP_Rel98_MsrPosition_Req_Extension rel98_MsrPosition_Req_extension; /* OPTIONAL */
   RRLP_Rel5_MsrPosition_Req_Extension rel5_MsrPosition_Req_extension; /* OPTIONAL */

   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_MsrPosition_Req;

/* SEQUENCE MsrPosition-Rsp */
typedef struct RRLP_MsrPosition_Rsp
{
   U16 validity;

   #define RRLP_MsrPosition_Rsp_multipleSets_valid 0x0100
   #define RRLP_MsrPosition_Rsp_referenceIdentity_valid 0x0080
   #define RRLP_MsrPosition_Rsp_otd_MeasureInfo_valid 0x0040
   #define RRLP_MsrPosition_Rsp_locationInfo_valid 0x0020
   #define RRLP_MsrPosition_Rsp_gps_MeasureInfo_valid 0x0010
   #define RRLP_MsrPosition_Rsp_locationError_valid 0x0008
   #define RRLP_MsrPosition_Rsp_extensionContainer_valid 0x0004
   #define RRLP_MsrPosition_Rsp_rel_98_MsrPosition_Rsp_Extension_valid 0x0002
   #define RRLP_MsrPosition_Rsp_rel_5_MsrPosition_Rsp_Extension_valid 0x0001

   RRLP_MultipleSets multipleSets; /* OPTIONAL */
   RRLP_ReferenceIdentity referenceIdentity; /* OPTIONAL */
   RRLP_OTD_MeasureInfo otd_MeasureInfo; /* OPTIONAL */
   RRLP_LocationInfo locationInfo; /* OPTIONAL */
   RRLP_GPS_MeasureInfo gps_MeasureInfo; /* OPTIONAL */
   RRLP_LocationError locationError; /* OPTIONAL */
   RRLP_ExtensionContainer extensionContainer; /* OPTIONAL */

   RRLP_Rel_98_MsrPosition_Rsp_Extension rel_98_MsrPosition_Rsp_Extension; /* OPTIONAL */
   RRLP_Rel_5_MsrPosition_Rsp_Extension rel_5_MsrPosition_Rsp_Extension; /* OPTIONAL */

   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_MsrPosition_Rsp;

/* SEQUENCE AssistanceData */
typedef struct RRLP_AssistanceData
{
   U8 validity;

   #define RRLP_AssistanceData_referenceAssistData_valid 0x80
   #define RRLP_AssistanceData_msrAssistData_valid 0x40
   #define RRLP_AssistanceData_systemInfoAssistData_valid 0x20
   #define RRLP_AssistanceData_gps_AssistData_valid 0x10
   #define RRLP_AssistanceData_moreAssDataToBeSent_valid 0x08
   #define RRLP_AssistanceData_extensionContainer_valid 0x04
   #define RRLP_AssistanceData_rel98_AssistanceData_Extension_valid 0x02
   #define RRLP_AssistanceData_rel5_AssistanceData_Extension_valid 0x01

   RRLP_ReferenceAssistData referenceAssistData; /* OPTIONAL */
   RRLP_MsrAssistData msrAssistData; /* OPTIONAL */
   RRLP_SystemInfoAssistData systemInfoAssistData; /* OPTIONAL */
   RRLP_GPS_AssistData gps_AssistData; /* OPTIONAL */
   RRLP_MoreAssDataToBeSent moreAssDataToBeSent; /* OPTIONAL */
   RRLP_ExtensionContainer extensionContainer; /* OPTIONAL */

   RRLP_Rel98_AssistanceData_Extension rel98_AssistanceData_Extension; /* OPTIONAL */
   RRLP_Rel5_AssistanceData_Extension rel5_AssistanceData_Extension; /* OPTIONAL */

   applib_UnKnowExtensionItemArray	UnKnowItem;
}
RRLP_AssistanceData;

/* CHOICE RRLP-Component */
typedef enum
{
   RRLP_RRLP_Component_msrPositionReq_selected = 1,
   RRLP_RRLP_Component_msrPositionRsp_selected,
   RRLP_RRLP_Component_assistanceData_selected,
   RRLP_RRLP_Component_assistanceDataAck_selected,
   RRLP_RRLP_Component_protocolError_selected,
   RRLP_RRLP_Component_UnKnowItem_selected
}
RRLP_RRLP_Component_selector;

typedef struct RRLP_RRLP_Component
{
   RRLP_RRLP_Component_selector selection;

   union
   {
      RRLP_MsrPosition_Req msrPositionReq;
      RRLP_MsrPosition_Rsp msrPositionRsp;
      RRLP_AssistanceData assistanceData;
      AsnNull assistanceDataAck;
      RRLP_ProtocolError protocolError;
      applib_ChoiceUnKnow UnKnowItem;
   }
   choice;
}
RRLP_RRLP_Component;

/* SEQUENCE PDU */
typedef struct RRLP_PDU
{
   U8 referenceNumber; /* MANDATORY */
   RRLP_RRLP_Component component; /* MANDATORY */
}
RRLP_PDU;


//Encode Function  Declaration
extern U32 AsnEncode_RRLP_PDU( RRLP_PDU *pType, U8 **ppEncoded, U32 *pEncodedLength, applib_AsnCustomMemFunctions *pMemFuncs );




//Decode Function  Declaration
extern U32 AsnDecode_RRLP_PDU( RRLP_PDU **ppType, U8 *pEncoded, U32 *pEncodedLength, void *pAppContext, applib_AsnCustomMemFunctions *pMemFuncs );


#ifdef __MTK_TARGET__
#define LIT(a) a##ll
#else
#define LIT(a) a
#endif


#endif /* _RRLP_ASN_H */

#endif /* __RRLP_REL_5__ */
