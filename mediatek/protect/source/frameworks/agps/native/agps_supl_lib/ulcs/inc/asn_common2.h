/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2007
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
 *****************************************************************************
 * Filename:
 * --------------------------------------------------------
 *   asn_common2.h
 *
 * Project:
 * --------------------------------------------------------
 *   MONZA
 *
 * Description:
 * --------------------------------------------------------
 *   Autogenerated file using the ubiasn1_for_csi.bat.
 *
 * Author:
 * --------------------------------------------------------
 *   John Chang (mtk00730)
 *
 ****************************************************************************/
 
/****************************************************************************
 *
 *               Assignment : Ubinetics ASN.1 Compiler
 *               CONFIDENTIAL
 *               Copyright (C) 2004 UbiNetics Ltd. All rights reserved.
 *               Cambridge Technology Centre
 *               Melbourn Royston
 *               Herts SG8 6DP UK
 *               Tel: +44 1763 262222
 *
 ****************************************************************************
 *
 * COMPONENT:   PS_FMK
 * MODULE:      ASN_COMMON
 * DESCRIPTION: Autogenerated by UBIASN.1 Compiler (Version 3.0)
 *
 ****************************************************************************/
 

/**
 * @file asn_common2.h
 *
 * ASN.1 Common header file
 *
 * @ingroup asn_common2
 */
 
/*****************************************************************************
 * $Log:$
 *
 * 06 19 2012 archilis.wang
 * [ALPS00303520] [Merge] Level 3 SW modules 提升至 Level 2 on ALPS.ICS2.MP
 * [Merge] Level 3 SW modules 提升至 Level 2 on ALPS.ICS2.MP
 *
 * Mar 3 2010 mtk80242
 * [MAUI_02155058] [asn.1]check-in w10.09
 * 
 *
 * Jul 16 2008 mtk01370
 * [MAUI_00805735] [ASN]check in ASN common file in asn_re folder
 * 
 *
 * Oct 3 2007 mtk00730
 * [MAUI_00555424] [MTK ASN.1 Compiler] Apply MTK ASN.1 UPER compiler to UAS
 * 
 *
 ****************************************************************************/
  
#ifndef _ASN_COMMON2_H
#define _ASN_COMMON2_H

void asnMemAlloc2 (AsnContext *pContext, void **memPtr, unsigned int size, char *file, int line);
void AsnRootDecodeAlloc2( AsnContext *pContext, void **ppType, int size, char *file, int line);
void AsnDecodeAlloc2( AsnContext *pContext, void **ppMem, int size, char *file, int line);
void AsnEncodeAlloc2( AsnContext *pContext, U8 **ppEncoded, U32 *pEncodedLength, char *file, int line);

#endif
